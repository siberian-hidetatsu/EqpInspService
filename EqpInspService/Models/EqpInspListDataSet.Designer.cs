//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace EqpInspService.Models {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("EqpInspListDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class EqpInspListDataSet : global::System.Data.DataSet {
        
        private EQPINSPDataTable tableEQPINSP;
        
        private EQPINSPMETERHISTDataTable tableEQPINSPMETERHIST;
        
        private EQPINSPMETERDataTable tableEQPINSPMETER;
        
        private EQPITEMMST_HDataTable tableEQPITEMMST_H;
        
        private EQPITEMSUBMST_HDataTable tableEQPITEMSUBMST_H;
        
        private EQPINSPITEMDataTable tableEQPINSPITEM;
        
        private EQPITEMSUBEXPMST_HDataTable tableEQPITEMSUBEXPMST_H;
        
        private EQPINSPITEMEXPDataTable tableEQPINSPITEMEXP;
        
        private EQPMAINMST_HDataTable tableEQPMAINMST_H;
        
        private EQPINSP_LISTDataTable tableEQPINSP_LIST;
        
        private global::System.Data.DataRelation relationEQPINSPMETER_EQPINSPMETERHIST;
        
        private global::System.Data.DataRelation relationEQPITEMMST_EQPITEMSUBMST;
        
        private global::System.Data.DataRelation relationEQPITEMSUBMST_EQPITEMSUBEXPMST;
        
        private global::System.Data.DataRelation relationEQPITEMSUBMST_EQPINSPITEM;
        
        private global::System.Data.DataRelation relationEQPITEMSUBEXPMST_EQPINSPITEMEXP;
        
        private global::System.Data.DataRelation relationEQPMAINMST_EQPINSP;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public EqpInspListDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected EqpInspListDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["EQPINSP"] != null)) {
                    base.Tables.Add(new EQPINSPDataTable(ds.Tables["EQPINSP"]));
                }
                if ((ds.Tables["EQPINSPMETERHIST"] != null)) {
                    base.Tables.Add(new EQPINSPMETERHISTDataTable(ds.Tables["EQPINSPMETERHIST"]));
                }
                if ((ds.Tables["EQPINSPMETER"] != null)) {
                    base.Tables.Add(new EQPINSPMETERDataTable(ds.Tables["EQPINSPMETER"]));
                }
                if ((ds.Tables["EQPITEMMST_H"] != null)) {
                    base.Tables.Add(new EQPITEMMST_HDataTable(ds.Tables["EQPITEMMST_H"]));
                }
                if ((ds.Tables["EQPITEMSUBMST_H"] != null)) {
                    base.Tables.Add(new EQPITEMSUBMST_HDataTable(ds.Tables["EQPITEMSUBMST_H"]));
                }
                if ((ds.Tables["EQPINSPITEM"] != null)) {
                    base.Tables.Add(new EQPINSPITEMDataTable(ds.Tables["EQPINSPITEM"]));
                }
                if ((ds.Tables["EQPITEMSUBEXPMST_H"] != null)) {
                    base.Tables.Add(new EQPITEMSUBEXPMST_HDataTable(ds.Tables["EQPITEMSUBEXPMST_H"]));
                }
                if ((ds.Tables["EQPINSPITEMEXP"] != null)) {
                    base.Tables.Add(new EQPINSPITEMEXPDataTable(ds.Tables["EQPINSPITEMEXP"]));
                }
                if ((ds.Tables["EQPMAINMST_H"] != null)) {
                    base.Tables.Add(new EQPMAINMST_HDataTable(ds.Tables["EQPMAINMST_H"]));
                }
                if ((ds.Tables["EQPINSP_LIST"] != null)) {
                    base.Tables.Add(new EQPINSP_LISTDataTable(ds.Tables["EQPINSP_LIST"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EQPINSPDataTable EQPINSP {
            get {
                return this.tableEQPINSP;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EQPINSPMETERHISTDataTable EQPINSPMETERHIST {
            get {
                return this.tableEQPINSPMETERHIST;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EQPINSPMETERDataTable EQPINSPMETER {
            get {
                return this.tableEQPINSPMETER;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EQPITEMMST_HDataTable EQPITEMMST_H {
            get {
                return this.tableEQPITEMMST_H;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EQPITEMSUBMST_HDataTable EQPITEMSUBMST_H {
            get {
                return this.tableEQPITEMSUBMST_H;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EQPINSPITEMDataTable EQPINSPITEM {
            get {
                return this.tableEQPINSPITEM;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EQPITEMSUBEXPMST_HDataTable EQPITEMSUBEXPMST_H {
            get {
                return this.tableEQPITEMSUBEXPMST_H;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EQPINSPITEMEXPDataTable EQPINSPITEMEXP {
            get {
                return this.tableEQPINSPITEMEXP;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EQPMAINMST_HDataTable EQPMAINMST_H {
            get {
                return this.tableEQPMAINMST_H;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EQPINSP_LISTDataTable EQPINSP_LIST {
            get {
                return this.tableEQPINSP_LIST;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            EqpInspListDataSet cln = ((EqpInspListDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["EQPINSP"] != null)) {
                    base.Tables.Add(new EQPINSPDataTable(ds.Tables["EQPINSP"]));
                }
                if ((ds.Tables["EQPINSPMETERHIST"] != null)) {
                    base.Tables.Add(new EQPINSPMETERHISTDataTable(ds.Tables["EQPINSPMETERHIST"]));
                }
                if ((ds.Tables["EQPINSPMETER"] != null)) {
                    base.Tables.Add(new EQPINSPMETERDataTable(ds.Tables["EQPINSPMETER"]));
                }
                if ((ds.Tables["EQPITEMMST_H"] != null)) {
                    base.Tables.Add(new EQPITEMMST_HDataTable(ds.Tables["EQPITEMMST_H"]));
                }
                if ((ds.Tables["EQPITEMSUBMST_H"] != null)) {
                    base.Tables.Add(new EQPITEMSUBMST_HDataTable(ds.Tables["EQPITEMSUBMST_H"]));
                }
                if ((ds.Tables["EQPINSPITEM"] != null)) {
                    base.Tables.Add(new EQPINSPITEMDataTable(ds.Tables["EQPINSPITEM"]));
                }
                if ((ds.Tables["EQPITEMSUBEXPMST_H"] != null)) {
                    base.Tables.Add(new EQPITEMSUBEXPMST_HDataTable(ds.Tables["EQPITEMSUBEXPMST_H"]));
                }
                if ((ds.Tables["EQPINSPITEMEXP"] != null)) {
                    base.Tables.Add(new EQPINSPITEMEXPDataTable(ds.Tables["EQPINSPITEMEXP"]));
                }
                if ((ds.Tables["EQPMAINMST_H"] != null)) {
                    base.Tables.Add(new EQPMAINMST_HDataTable(ds.Tables["EQPMAINMST_H"]));
                }
                if ((ds.Tables["EQPINSP_LIST"] != null)) {
                    base.Tables.Add(new EQPINSP_LISTDataTable(ds.Tables["EQPINSP_LIST"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableEQPINSP = ((EQPINSPDataTable)(base.Tables["EQPINSP"]));
            if ((initTable == true)) {
                if ((this.tableEQPINSP != null)) {
                    this.tableEQPINSP.InitVars();
                }
            }
            this.tableEQPINSPMETERHIST = ((EQPINSPMETERHISTDataTable)(base.Tables["EQPINSPMETERHIST"]));
            if ((initTable == true)) {
                if ((this.tableEQPINSPMETERHIST != null)) {
                    this.tableEQPINSPMETERHIST.InitVars();
                }
            }
            this.tableEQPINSPMETER = ((EQPINSPMETERDataTable)(base.Tables["EQPINSPMETER"]));
            if ((initTable == true)) {
                if ((this.tableEQPINSPMETER != null)) {
                    this.tableEQPINSPMETER.InitVars();
                }
            }
            this.tableEQPITEMMST_H = ((EQPITEMMST_HDataTable)(base.Tables["EQPITEMMST_H"]));
            if ((initTable == true)) {
                if ((this.tableEQPITEMMST_H != null)) {
                    this.tableEQPITEMMST_H.InitVars();
                }
            }
            this.tableEQPITEMSUBMST_H = ((EQPITEMSUBMST_HDataTable)(base.Tables["EQPITEMSUBMST_H"]));
            if ((initTable == true)) {
                if ((this.tableEQPITEMSUBMST_H != null)) {
                    this.tableEQPITEMSUBMST_H.InitVars();
                }
            }
            this.tableEQPINSPITEM = ((EQPINSPITEMDataTable)(base.Tables["EQPINSPITEM"]));
            if ((initTable == true)) {
                if ((this.tableEQPINSPITEM != null)) {
                    this.tableEQPINSPITEM.InitVars();
                }
            }
            this.tableEQPITEMSUBEXPMST_H = ((EQPITEMSUBEXPMST_HDataTable)(base.Tables["EQPITEMSUBEXPMST_H"]));
            if ((initTable == true)) {
                if ((this.tableEQPITEMSUBEXPMST_H != null)) {
                    this.tableEQPITEMSUBEXPMST_H.InitVars();
                }
            }
            this.tableEQPINSPITEMEXP = ((EQPINSPITEMEXPDataTable)(base.Tables["EQPINSPITEMEXP"]));
            if ((initTable == true)) {
                if ((this.tableEQPINSPITEMEXP != null)) {
                    this.tableEQPINSPITEMEXP.InitVars();
                }
            }
            this.tableEQPMAINMST_H = ((EQPMAINMST_HDataTable)(base.Tables["EQPMAINMST_H"]));
            if ((initTable == true)) {
                if ((this.tableEQPMAINMST_H != null)) {
                    this.tableEQPMAINMST_H.InitVars();
                }
            }
            this.tableEQPINSP_LIST = ((EQPINSP_LISTDataTable)(base.Tables["EQPINSP_LIST"]));
            if ((initTable == true)) {
                if ((this.tableEQPINSP_LIST != null)) {
                    this.tableEQPINSP_LIST.InitVars();
                }
            }
            this.relationEQPINSPMETER_EQPINSPMETERHIST = this.Relations["EQPINSPMETER_EQPINSPMETERHIST"];
            this.relationEQPITEMMST_EQPITEMSUBMST = this.Relations["EQPITEMMST_EQPITEMSUBMST"];
            this.relationEQPITEMSUBMST_EQPITEMSUBEXPMST = this.Relations["EQPITEMSUBMST_EQPITEMSUBEXPMST"];
            this.relationEQPITEMSUBMST_EQPINSPITEM = this.Relations["EQPITEMSUBMST_EQPINSPITEM"];
            this.relationEQPITEMSUBEXPMST_EQPINSPITEMEXP = this.Relations["EQPITEMSUBEXPMST_EQPINSPITEMEXP"];
            this.relationEQPMAINMST_EQPINSP = this.Relations["EQPMAINMST_EQPINSP"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitClass() {
            this.DataSetName = "EqpInspListDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/EqpInspListDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableEQPINSP = new EQPINSPDataTable();
            base.Tables.Add(this.tableEQPINSP);
            this.tableEQPINSPMETERHIST = new EQPINSPMETERHISTDataTable();
            base.Tables.Add(this.tableEQPINSPMETERHIST);
            this.tableEQPINSPMETER = new EQPINSPMETERDataTable();
            base.Tables.Add(this.tableEQPINSPMETER);
            this.tableEQPITEMMST_H = new EQPITEMMST_HDataTable();
            base.Tables.Add(this.tableEQPITEMMST_H);
            this.tableEQPITEMSUBMST_H = new EQPITEMSUBMST_HDataTable();
            base.Tables.Add(this.tableEQPITEMSUBMST_H);
            this.tableEQPINSPITEM = new EQPINSPITEMDataTable();
            base.Tables.Add(this.tableEQPINSPITEM);
            this.tableEQPITEMSUBEXPMST_H = new EQPITEMSUBEXPMST_HDataTable();
            base.Tables.Add(this.tableEQPITEMSUBEXPMST_H);
            this.tableEQPINSPITEMEXP = new EQPINSPITEMEXPDataTable();
            base.Tables.Add(this.tableEQPINSPITEMEXP);
            this.tableEQPMAINMST_H = new EQPMAINMST_HDataTable();
            base.Tables.Add(this.tableEQPMAINMST_H);
            this.tableEQPINSP_LIST = new EQPINSP_LISTDataTable();
            base.Tables.Add(this.tableEQPINSP_LIST);
            this.relationEQPINSPMETER_EQPINSPMETERHIST = new global::System.Data.DataRelation("EQPINSPMETER_EQPINSPMETERHIST", new global::System.Data.DataColumn[] {
                        this.tableEQPINSPMETER.MODELColumn,
                        this.tableEQPINSPMETER.SERIALNUMColumn}, new global::System.Data.DataColumn[] {
                        this.tableEQPINSPMETERHIST.MODELColumn,
                        this.tableEQPINSPMETERHIST.SERIALNUMColumn}, false);
            this.Relations.Add(this.relationEQPINSPMETER_EQPINSPMETERHIST);
            this.relationEQPITEMMST_EQPITEMSUBMST = new global::System.Data.DataRelation("EQPITEMMST_EQPITEMSUBMST", new global::System.Data.DataColumn[] {
                        this.tableEQPITEMMST_H.EQPTYPEColumn,
                        this.tableEQPITEMMST_H.ITEMCODEColumn}, new global::System.Data.DataColumn[] {
                        this.tableEQPITEMSUBMST_H.EQPTYPEColumn,
                        this.tableEQPITEMSUBMST_H.ITEMCODEColumn}, false);
            this.Relations.Add(this.relationEQPITEMMST_EQPITEMSUBMST);
            this.relationEQPITEMSUBMST_EQPITEMSUBEXPMST = new global::System.Data.DataRelation("EQPITEMSUBMST_EQPITEMSUBEXPMST", new global::System.Data.DataColumn[] {
                        this.tableEQPITEMSUBMST_H.EQPTYPEColumn,
                        this.tableEQPITEMSUBMST_H.ITEMCODEColumn,
                        this.tableEQPITEMSUBMST_H.SEQNUMColumn}, new global::System.Data.DataColumn[] {
                        this.tableEQPITEMSUBEXPMST_H.EQPTYPEColumn,
                        this.tableEQPITEMSUBEXPMST_H.ITEMCODEColumn,
                        this.tableEQPITEMSUBEXPMST_H.SEQNUMColumn}, false);
            this.Relations.Add(this.relationEQPITEMSUBMST_EQPITEMSUBEXPMST);
            this.relationEQPITEMSUBMST_EQPINSPITEM = new global::System.Data.DataRelation("EQPITEMSUBMST_EQPINSPITEM", new global::System.Data.DataColumn[] {
                        this.tableEQPITEMSUBMST_H.ITEMCODEColumn,
                        this.tableEQPITEMSUBMST_H.SEQNUMColumn}, new global::System.Data.DataColumn[] {
                        this.tableEQPINSPITEM.ITEMCODEColumn,
                        this.tableEQPINSPITEM.SEQNUMColumn}, false);
            this.Relations.Add(this.relationEQPITEMSUBMST_EQPINSPITEM);
            this.relationEQPITEMSUBEXPMST_EQPINSPITEMEXP = new global::System.Data.DataRelation("EQPITEMSUBEXPMST_EQPINSPITEMEXP", new global::System.Data.DataColumn[] {
                        this.tableEQPITEMSUBEXPMST_H.ITEMCODEColumn,
                        this.tableEQPITEMSUBEXPMST_H.SEQNUMColumn,
                        this.tableEQPITEMSUBEXPMST_H.EXPSEQNUMColumn}, new global::System.Data.DataColumn[] {
                        this.tableEQPINSPITEMEXP.ITEMCODEColumn,
                        this.tableEQPINSPITEMEXP.SEQNUMColumn,
                        this.tableEQPINSPITEMEXP.EXPSEQNUMColumn}, false);
            this.Relations.Add(this.relationEQPITEMSUBEXPMST_EQPINSPITEMEXP);
            this.relationEQPMAINMST_EQPINSP = new global::System.Data.DataRelation("EQPMAINMST_EQPINSP", new global::System.Data.DataColumn[] {
                        this.tableEQPMAINMST_H.EQPTYPEColumn,
                        this.tableEQPMAINMST_H.REVISIONNUMColumn}, new global::System.Data.DataColumn[] {
                        this.tableEQPINSP.EQPTYPEColumn,
                        this.tableEQPINSP.REVISIONNUMColumn}, false);
            this.Relations.Add(this.relationEQPMAINMST_EQPINSP);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeEQPINSP() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeEQPINSPMETERHIST() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeEQPINSPMETER() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeEQPITEMMST_H() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeEQPITEMSUBMST_H() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeEQPINSPITEM() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeEQPITEMSUBEXPMST_H() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeEQPINSPITEMEXP() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeEQPMAINMST_H() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeEQPINSP_LIST() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            EqpInspListDataSet ds = new EqpInspListDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void EQPINSPRowChangeEventHandler(object sender, EQPINSPRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void EQPINSPMETERHISTRowChangeEventHandler(object sender, EQPINSPMETERHISTRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void EQPINSPMETERRowChangeEventHandler(object sender, EQPINSPMETERRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void EQPITEMMST_HRowChangeEventHandler(object sender, EQPITEMMST_HRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void EQPITEMSUBMST_HRowChangeEventHandler(object sender, EQPITEMSUBMST_HRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void EQPINSPITEMRowChangeEventHandler(object sender, EQPINSPITEMRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void EQPITEMSUBEXPMST_HRowChangeEventHandler(object sender, EQPITEMSUBEXPMST_HRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void EQPINSPITEMEXPRowChangeEventHandler(object sender, EQPINSPITEMEXPRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void EQPMAINMST_HRowChangeEventHandler(object sender, EQPMAINMST_HRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void EQPINSP_LISTRowChangeEventHandler(object sender, EQPINSP_LISTRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EQPINSPDataTable : global::System.Data.TypedTableBase<EQPINSPRow> {
            
            private global::System.Data.DataColumn columnEQPID;
            
            private global::System.Data.DataColumn columnINTERVAL;
            
            private global::System.Data.DataColumn columnEQPTYPE;
            
            private global::System.Data.DataColumn columnSERIALNUM;
            
            private global::System.Data.DataColumn columnASSETNUM;
            
            private global::System.Data.DataColumn columnSTREPORTDATE;
            
            private global::System.Data.DataColumn columnENREPORTDATE;
            
            private global::System.Data.DataColumn columnFLOOR;
            
            private global::System.Data.DataColumn columnIMPLOPERATORNAME;
            
            private global::System.Data.DataColumn columnRESPOPERATORNAME;
            
            private global::System.Data.DataColumn columnRESULT;
            
            private global::System.Data.DataColumn columnREVISIONNUM;
            
            private global::System.Data.DataColumn columnINSPECTIONNAME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPINSPDataTable() {
                this.TableName = "EQPINSP";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal EQPINSPDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected EQPINSPDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EQPIDColumn {
                get {
                    return this.columnEQPID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn INTERVALColumn {
                get {
                    return this.columnINTERVAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EQPTYPEColumn {
                get {
                    return this.columnEQPTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SERIALNUMColumn {
                get {
                    return this.columnSERIALNUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ASSETNUMColumn {
                get {
                    return this.columnASSETNUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn STREPORTDATEColumn {
                get {
                    return this.columnSTREPORTDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ENREPORTDATEColumn {
                get {
                    return this.columnENREPORTDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FLOORColumn {
                get {
                    return this.columnFLOOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IMPLOPERATORNAMEColumn {
                get {
                    return this.columnIMPLOPERATORNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RESPOPERATORNAMEColumn {
                get {
                    return this.columnRESPOPERATORNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RESULTColumn {
                get {
                    return this.columnRESULT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn REVISIONNUMColumn {
                get {
                    return this.columnREVISIONNUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn INSPECTIONNAMEColumn {
                get {
                    return this.columnINSPECTIONNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPINSPRow this[int index] {
                get {
                    return ((EQPINSPRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event EQPINSPRowChangeEventHandler EQPINSPRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event EQPINSPRowChangeEventHandler EQPINSPRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event EQPINSPRowChangeEventHandler EQPINSPRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event EQPINSPRowChangeEventHandler EQPINSPRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddEQPINSPRow(EQPINSPRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPINSPRow AddEQPINSPRow(string EQPID, string INTERVAL, string EQPTYPE, string SERIALNUM, string ASSETNUM, string STREPORTDATE, string ENREPORTDATE, string FLOOR, string IMPLOPERATORNAME, string RESPOPERATORNAME, string RESULT, string REVISIONNUM, string INSPECTIONNAME) {
                EQPINSPRow rowEQPINSPRow = ((EQPINSPRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        EQPID,
                        INTERVAL,
                        EQPTYPE,
                        SERIALNUM,
                        ASSETNUM,
                        STREPORTDATE,
                        ENREPORTDATE,
                        FLOOR,
                        IMPLOPERATORNAME,
                        RESPOPERATORNAME,
                        RESULT,
                        REVISIONNUM,
                        INSPECTIONNAME};
                rowEQPINSPRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEQPINSPRow);
                return rowEQPINSPRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPINSPRow FindByEQPIDINTERVALSTREPORTDATE(string EQPID, string INTERVAL, string STREPORTDATE) {
                return ((EQPINSPRow)(this.Rows.Find(new object[] {
                            EQPID,
                            INTERVAL,
                            STREPORTDATE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                EQPINSPDataTable cln = ((EQPINSPDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EQPINSPDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnEQPID = base.Columns["EQPID"];
                this.columnINTERVAL = base.Columns["INTERVAL"];
                this.columnEQPTYPE = base.Columns["EQPTYPE"];
                this.columnSERIALNUM = base.Columns["SERIALNUM"];
                this.columnASSETNUM = base.Columns["ASSETNUM"];
                this.columnSTREPORTDATE = base.Columns["STREPORTDATE"];
                this.columnENREPORTDATE = base.Columns["ENREPORTDATE"];
                this.columnFLOOR = base.Columns["FLOOR"];
                this.columnIMPLOPERATORNAME = base.Columns["IMPLOPERATORNAME"];
                this.columnRESPOPERATORNAME = base.Columns["RESPOPERATORNAME"];
                this.columnRESULT = base.Columns["RESULT"];
                this.columnREVISIONNUM = base.Columns["REVISIONNUM"];
                this.columnINSPECTIONNAME = base.Columns["INSPECTIONNAME"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnEQPID = new global::System.Data.DataColumn("EQPID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEQPID);
                this.columnINTERVAL = new global::System.Data.DataColumn("INTERVAL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINTERVAL);
                this.columnEQPTYPE = new global::System.Data.DataColumn("EQPTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEQPTYPE);
                this.columnSERIALNUM = new global::System.Data.DataColumn("SERIALNUM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSERIALNUM);
                this.columnASSETNUM = new global::System.Data.DataColumn("ASSETNUM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnASSETNUM);
                this.columnSTREPORTDATE = new global::System.Data.DataColumn("STREPORTDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTREPORTDATE);
                this.columnENREPORTDATE = new global::System.Data.DataColumn("ENREPORTDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENREPORTDATE);
                this.columnFLOOR = new global::System.Data.DataColumn("FLOOR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLOOR);
                this.columnIMPLOPERATORNAME = new global::System.Data.DataColumn("IMPLOPERATORNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIMPLOPERATORNAME);
                this.columnRESPOPERATORNAME = new global::System.Data.DataColumn("RESPOPERATORNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRESPOPERATORNAME);
                this.columnRESULT = new global::System.Data.DataColumn("RESULT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRESULT);
                this.columnREVISIONNUM = new global::System.Data.DataColumn("REVISIONNUM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREVISIONNUM);
                this.columnINSPECTIONNAME = new global::System.Data.DataColumn("INSPECTIONNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINSPECTIONNAME);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnEQPID,
                                this.columnINTERVAL,
                                this.columnSTREPORTDATE}, true));
                this.columnEQPID.AllowDBNull = false;
                this.columnEQPID.Caption = "装置ID";
                this.columnINTERVAL.AllowDBNull = false;
                this.columnINTERVAL.Caption = "点検頻度";
                this.columnEQPTYPE.AllowDBNull = false;
                this.columnEQPTYPE.Caption = "装置タイプ";
                this.columnSERIALNUM.Caption = "製造番号";
                this.columnASSETNUM.Caption = "資産番号";
                this.columnSTREPORTDATE.AllowDBNull = false;
                this.columnSTREPORTDATE.Caption = "開始日";
                this.columnENREPORTDATE.Caption = "終了日";
                this.columnFLOOR.Caption = "フロア";
                this.columnIMPLOPERATORNAME.Caption = "実施者";
                this.columnRESPOPERATORNAME.Caption = "担当者";
                this.columnRESULT.Caption = "結果";
                this.columnREVISIONNUM.Caption = "リビジョン";
                this.columnINSPECTIONNAME.Caption = "点検名称";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPINSPRow NewEQPINSPRow() {
                return ((EQPINSPRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EQPINSPRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(EQPINSPRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EQPINSPRowChanged != null)) {
                    this.EQPINSPRowChanged(this, new EQPINSPRowChangeEvent(((EQPINSPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EQPINSPRowChanging != null)) {
                    this.EQPINSPRowChanging(this, new EQPINSPRowChangeEvent(((EQPINSPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EQPINSPRowDeleted != null)) {
                    this.EQPINSPRowDeleted(this, new EQPINSPRowChangeEvent(((EQPINSPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EQPINSPRowDeleting != null)) {
                    this.EQPINSPRowDeleting(this, new EQPINSPRowChangeEvent(((EQPINSPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveEQPINSPRow(EQPINSPRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EqpInspListDataSet ds = new EqpInspListDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EQPINSPDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EQPINSPMETERHISTDataTable : global::System.Data.TypedTableBase<EQPINSPMETERHISTRow> {
            
            private global::System.Data.DataColumn columnEQPID;
            
            private global::System.Data.DataColumn columnINTERVAL;
            
            private global::System.Data.DataColumn columnSTREPORTDATE;
            
            private global::System.Data.DataColumn columnENREPORTDATE;
            
            private global::System.Data.DataColumn columnMODEL;
            
            private global::System.Data.DataColumn columnSERIALNUM;
            
            private global::System.Data.DataColumn columnINOROUTPRDCT;
            
            private global::System.Data.DataColumn columnLIMITDATE;
            
            private global::System.Data.DataColumn columnCONTROLNUM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPINSPMETERHISTDataTable() {
                this.TableName = "EQPINSPMETERHIST";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal EQPINSPMETERHISTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected EQPINSPMETERHISTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EQPIDColumn {
                get {
                    return this.columnEQPID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn INTERVALColumn {
                get {
                    return this.columnINTERVAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn STREPORTDATEColumn {
                get {
                    return this.columnSTREPORTDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ENREPORTDATEColumn {
                get {
                    return this.columnENREPORTDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MODELColumn {
                get {
                    return this.columnMODEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SERIALNUMColumn {
                get {
                    return this.columnSERIALNUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn INOROUTPRDCTColumn {
                get {
                    return this.columnINOROUTPRDCT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LIMITDATEColumn {
                get {
                    return this.columnLIMITDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CONTROLNUMColumn {
                get {
                    return this.columnCONTROLNUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPINSPMETERHISTRow this[int index] {
                get {
                    return ((EQPINSPMETERHISTRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event EQPINSPMETERHISTRowChangeEventHandler EQPINSPMETERHISTRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event EQPINSPMETERHISTRowChangeEventHandler EQPINSPMETERHISTRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event EQPINSPMETERHISTRowChangeEventHandler EQPINSPMETERHISTRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event EQPINSPMETERHISTRowChangeEventHandler EQPINSPMETERHISTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddEQPINSPMETERHISTRow(EQPINSPMETERHISTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPINSPMETERHISTRow AddEQPINSPMETERHISTRow(string EQPID, string INTERVAL, string STREPORTDATE, string ENREPORTDATE, string MODEL, string SERIALNUM, string INOROUTPRDCT, string LIMITDATE, string CONTROLNUM) {
                EQPINSPMETERHISTRow rowEQPINSPMETERHISTRow = ((EQPINSPMETERHISTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        EQPID,
                        INTERVAL,
                        STREPORTDATE,
                        ENREPORTDATE,
                        MODEL,
                        SERIALNUM,
                        INOROUTPRDCT,
                        LIMITDATE,
                        CONTROLNUM};
                rowEQPINSPMETERHISTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEQPINSPMETERHISTRow);
                return rowEQPINSPMETERHISTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPINSPMETERHISTRow FindByEQPIDINTERVALSTREPORTDATEMODELSERIALNUM(string EQPID, string INTERVAL, string STREPORTDATE, string MODEL, string SERIALNUM) {
                return ((EQPINSPMETERHISTRow)(this.Rows.Find(new object[] {
                            EQPID,
                            INTERVAL,
                            STREPORTDATE,
                            MODEL,
                            SERIALNUM})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                EQPINSPMETERHISTDataTable cln = ((EQPINSPMETERHISTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EQPINSPMETERHISTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnEQPID = base.Columns["EQPID"];
                this.columnINTERVAL = base.Columns["INTERVAL"];
                this.columnSTREPORTDATE = base.Columns["STREPORTDATE"];
                this.columnENREPORTDATE = base.Columns["ENREPORTDATE"];
                this.columnMODEL = base.Columns["MODEL"];
                this.columnSERIALNUM = base.Columns["SERIALNUM"];
                this.columnINOROUTPRDCT = base.Columns["INOROUTPRDCT"];
                this.columnLIMITDATE = base.Columns["LIMITDATE"];
                this.columnCONTROLNUM = base.Columns["CONTROLNUM"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnEQPID = new global::System.Data.DataColumn("EQPID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEQPID);
                this.columnINTERVAL = new global::System.Data.DataColumn("INTERVAL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINTERVAL);
                this.columnSTREPORTDATE = new global::System.Data.DataColumn("STREPORTDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTREPORTDATE);
                this.columnENREPORTDATE = new global::System.Data.DataColumn("ENREPORTDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENREPORTDATE);
                this.columnMODEL = new global::System.Data.DataColumn("MODEL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODEL);
                this.columnSERIALNUM = new global::System.Data.DataColumn("SERIALNUM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSERIALNUM);
                this.columnINOROUTPRDCT = new global::System.Data.DataColumn("INOROUTPRDCT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINOROUTPRDCT);
                this.columnLIMITDATE = new global::System.Data.DataColumn("LIMITDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLIMITDATE);
                this.columnCONTROLNUM = new global::System.Data.DataColumn("CONTROLNUM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONTROLNUM);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnEQPID,
                                this.columnINTERVAL,
                                this.columnSTREPORTDATE,
                                this.columnMODEL,
                                this.columnSERIALNUM}, true));
                this.columnEQPID.AllowDBNull = false;
                this.columnEQPID.Caption = "装置ID";
                this.columnINTERVAL.AllowDBNull = false;
                this.columnINTERVAL.Caption = "点検頻度";
                this.columnSTREPORTDATE.AllowDBNull = false;
                this.columnSTREPORTDATE.Caption = "実施開始日";
                this.columnENREPORTDATE.Caption = "実施終了日";
                this.columnMODEL.AllowDBNull = false;
                this.columnMODEL.Caption = "型式";
                this.columnSERIALNUM.AllowDBNull = false;
                this.columnSERIALNUM.Caption = "製造番号";
                this.columnINOROUTPRDCT.Caption = "社内品or社外品";
                this.columnLIMITDATE.Caption = "有効期限";
                this.columnCONTROLNUM.Caption = "管理番号";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPINSPMETERHISTRow NewEQPINSPMETERHISTRow() {
                return ((EQPINSPMETERHISTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EQPINSPMETERHISTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(EQPINSPMETERHISTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EQPINSPMETERHISTRowChanged != null)) {
                    this.EQPINSPMETERHISTRowChanged(this, new EQPINSPMETERHISTRowChangeEvent(((EQPINSPMETERHISTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EQPINSPMETERHISTRowChanging != null)) {
                    this.EQPINSPMETERHISTRowChanging(this, new EQPINSPMETERHISTRowChangeEvent(((EQPINSPMETERHISTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EQPINSPMETERHISTRowDeleted != null)) {
                    this.EQPINSPMETERHISTRowDeleted(this, new EQPINSPMETERHISTRowChangeEvent(((EQPINSPMETERHISTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EQPINSPMETERHISTRowDeleting != null)) {
                    this.EQPINSPMETERHISTRowDeleting(this, new EQPINSPMETERHISTRowChangeEvent(((EQPINSPMETERHISTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveEQPINSPMETERHISTRow(EQPINSPMETERHISTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EqpInspListDataSet ds = new EqpInspListDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EQPINSPMETERHISTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EQPINSPMETERDataTable : global::System.Data.TypedTableBase<EQPINSPMETERRow> {
            
            private global::System.Data.DataColumn columnMODEL;
            
            private global::System.Data.DataColumn columnSERIALNUM;
            
            private global::System.Data.DataColumn columnDEVICENAME;
            
            private global::System.Data.DataColumn columnMAKER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPINSPMETERDataTable() {
                this.TableName = "EQPINSPMETER";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal EQPINSPMETERDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected EQPINSPMETERDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MODELColumn {
                get {
                    return this.columnMODEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SERIALNUMColumn {
                get {
                    return this.columnSERIALNUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DEVICENAMEColumn {
                get {
                    return this.columnDEVICENAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MAKERColumn {
                get {
                    return this.columnMAKER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPINSPMETERRow this[int index] {
                get {
                    return ((EQPINSPMETERRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event EQPINSPMETERRowChangeEventHandler EQPINSPMETERRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event EQPINSPMETERRowChangeEventHandler EQPINSPMETERRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event EQPINSPMETERRowChangeEventHandler EQPINSPMETERRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event EQPINSPMETERRowChangeEventHandler EQPINSPMETERRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddEQPINSPMETERRow(EQPINSPMETERRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPINSPMETERRow AddEQPINSPMETERRow(string MODEL, string SERIALNUM, string DEVICENAME, string MAKER) {
                EQPINSPMETERRow rowEQPINSPMETERRow = ((EQPINSPMETERRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MODEL,
                        SERIALNUM,
                        DEVICENAME,
                        MAKER};
                rowEQPINSPMETERRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEQPINSPMETERRow);
                return rowEQPINSPMETERRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPINSPMETERRow FindByMODELSERIALNUM(string MODEL, string SERIALNUM) {
                return ((EQPINSPMETERRow)(this.Rows.Find(new object[] {
                            MODEL,
                            SERIALNUM})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                EQPINSPMETERDataTable cln = ((EQPINSPMETERDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EQPINSPMETERDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnMODEL = base.Columns["MODEL"];
                this.columnSERIALNUM = base.Columns["SERIALNUM"];
                this.columnDEVICENAME = base.Columns["DEVICENAME"];
                this.columnMAKER = base.Columns["MAKER"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnMODEL = new global::System.Data.DataColumn("MODEL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODEL);
                this.columnSERIALNUM = new global::System.Data.DataColumn("SERIALNUM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSERIALNUM);
                this.columnDEVICENAME = new global::System.Data.DataColumn("DEVICENAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEVICENAME);
                this.columnMAKER = new global::System.Data.DataColumn("MAKER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAKER);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMODEL,
                                this.columnSERIALNUM}, true));
                this.columnMODEL.AllowDBNull = false;
                this.columnMODEL.Caption = "型式";
                this.columnSERIALNUM.AllowDBNull = false;
                this.columnSERIALNUM.Caption = "製造番号";
                this.columnDEVICENAME.Caption = "機器名称";
                this.columnMAKER.Caption = "メーカー";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPINSPMETERRow NewEQPINSPMETERRow() {
                return ((EQPINSPMETERRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EQPINSPMETERRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(EQPINSPMETERRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EQPINSPMETERRowChanged != null)) {
                    this.EQPINSPMETERRowChanged(this, new EQPINSPMETERRowChangeEvent(((EQPINSPMETERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EQPINSPMETERRowChanging != null)) {
                    this.EQPINSPMETERRowChanging(this, new EQPINSPMETERRowChangeEvent(((EQPINSPMETERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EQPINSPMETERRowDeleted != null)) {
                    this.EQPINSPMETERRowDeleted(this, new EQPINSPMETERRowChangeEvent(((EQPINSPMETERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EQPINSPMETERRowDeleting != null)) {
                    this.EQPINSPMETERRowDeleting(this, new EQPINSPMETERRowChangeEvent(((EQPINSPMETERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveEQPINSPMETERRow(EQPINSPMETERRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EqpInspListDataSet ds = new EqpInspListDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EQPINSPMETERDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EQPITEMMST_HDataTable : global::System.Data.TypedTableBase<EQPITEMMST_HRow> {
            
            private global::System.Data.DataColumn columnEQPTYPE;
            
            private global::System.Data.DataColumn columnITEMCODE;
            
            private global::System.Data.DataColumn columnITEMNAME;
            
            private global::System.Data.DataColumn columnSUBITEM1;
            
            private global::System.Data.DataColumn columnSUBITEM2;
            
            private global::System.Data.DataColumn columnSUBITEM3;
            
            private global::System.Data.DataColumn columnREVISIONNUM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPITEMMST_HDataTable() {
                this.TableName = "EQPITEMMST_H";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal EQPITEMMST_HDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected EQPITEMMST_HDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EQPTYPEColumn {
                get {
                    return this.columnEQPTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ITEMCODEColumn {
                get {
                    return this.columnITEMCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ITEMNAMEColumn {
                get {
                    return this.columnITEMNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SUBITEM1Column {
                get {
                    return this.columnSUBITEM1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SUBITEM2Column {
                get {
                    return this.columnSUBITEM2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SUBITEM3Column {
                get {
                    return this.columnSUBITEM3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn REVISIONNUMColumn {
                get {
                    return this.columnREVISIONNUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPITEMMST_HRow this[int index] {
                get {
                    return ((EQPITEMMST_HRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event EQPITEMMST_HRowChangeEventHandler EQPITEMMST_HRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event EQPITEMMST_HRowChangeEventHandler EQPITEMMST_HRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event EQPITEMMST_HRowChangeEventHandler EQPITEMMST_HRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event EQPITEMMST_HRowChangeEventHandler EQPITEMMST_HRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddEQPITEMMST_HRow(EQPITEMMST_HRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPITEMMST_HRow AddEQPITEMMST_HRow(string EQPTYPE, string ITEMCODE, string ITEMNAME, string SUBITEM1, string SUBITEM2, string SUBITEM3, string REVISIONNUM) {
                EQPITEMMST_HRow rowEQPITEMMST_HRow = ((EQPITEMMST_HRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        EQPTYPE,
                        ITEMCODE,
                        ITEMNAME,
                        SUBITEM1,
                        SUBITEM2,
                        SUBITEM3,
                        REVISIONNUM};
                rowEQPITEMMST_HRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEQPITEMMST_HRow);
                return rowEQPITEMMST_HRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPITEMMST_HRow FindByEQPTYPEITEMCODEREVISIONNUM(string EQPTYPE, string ITEMCODE, string REVISIONNUM) {
                return ((EQPITEMMST_HRow)(this.Rows.Find(new object[] {
                            EQPTYPE,
                            ITEMCODE,
                            REVISIONNUM})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                EQPITEMMST_HDataTable cln = ((EQPITEMMST_HDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EQPITEMMST_HDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnEQPTYPE = base.Columns["EQPTYPE"];
                this.columnITEMCODE = base.Columns["ITEMCODE"];
                this.columnITEMNAME = base.Columns["ITEMNAME"];
                this.columnSUBITEM1 = base.Columns["SUBITEM1"];
                this.columnSUBITEM2 = base.Columns["SUBITEM2"];
                this.columnSUBITEM3 = base.Columns["SUBITEM3"];
                this.columnREVISIONNUM = base.Columns["REVISIONNUM"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnEQPTYPE = new global::System.Data.DataColumn("EQPTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEQPTYPE);
                this.columnITEMCODE = new global::System.Data.DataColumn("ITEMCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEMCODE);
                this.columnITEMNAME = new global::System.Data.DataColumn("ITEMNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEMNAME);
                this.columnSUBITEM1 = new global::System.Data.DataColumn("SUBITEM1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUBITEM1);
                this.columnSUBITEM2 = new global::System.Data.DataColumn("SUBITEM2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUBITEM2);
                this.columnSUBITEM3 = new global::System.Data.DataColumn("SUBITEM3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUBITEM3);
                this.columnREVISIONNUM = new global::System.Data.DataColumn("REVISIONNUM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREVISIONNUM);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnEQPTYPE,
                                this.columnITEMCODE,
                                this.columnREVISIONNUM}, true));
                this.columnEQPTYPE.AllowDBNull = false;
                this.columnEQPTYPE.Caption = "装置タイプ";
                this.columnITEMCODE.AllowDBNull = false;
                this.columnITEMCODE.Caption = "点検項目コード";
                this.columnITEMNAME.Caption = "点検項目名";
                this.columnSUBITEM1.Caption = "サブ項目1";
                this.columnSUBITEM2.Caption = "サブ項目2";
                this.columnSUBITEM3.Caption = "サブ項目3";
                this.columnREVISIONNUM.AllowDBNull = false;
                this.columnREVISIONNUM.Caption = "リビジョン";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPITEMMST_HRow NewEQPITEMMST_HRow() {
                return ((EQPITEMMST_HRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EQPITEMMST_HRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(EQPITEMMST_HRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EQPITEMMST_HRowChanged != null)) {
                    this.EQPITEMMST_HRowChanged(this, new EQPITEMMST_HRowChangeEvent(((EQPITEMMST_HRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EQPITEMMST_HRowChanging != null)) {
                    this.EQPITEMMST_HRowChanging(this, new EQPITEMMST_HRowChangeEvent(((EQPITEMMST_HRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EQPITEMMST_HRowDeleted != null)) {
                    this.EQPITEMMST_HRowDeleted(this, new EQPITEMMST_HRowChangeEvent(((EQPITEMMST_HRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EQPITEMMST_HRowDeleting != null)) {
                    this.EQPITEMMST_HRowDeleting(this, new EQPITEMMST_HRowChangeEvent(((EQPITEMMST_HRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveEQPITEMMST_HRow(EQPITEMMST_HRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EqpInspListDataSet ds = new EqpInspListDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EQPITEMMST_HDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EQPITEMSUBMST_HDataTable : global::System.Data.TypedTableBase<EQPITEMSUBMST_HRow> {
            
            private global::System.Data.DataColumn columnEQPTYPE;
            
            private global::System.Data.DataColumn columnITEMCODE;
            
            private global::System.Data.DataColumn columnSEQNUM;
            
            private global::System.Data.DataColumn columnSUBITEMNAME;
            
            private global::System.Data.DataColumn columnSUBITEMIMG;
            
            private global::System.Data.DataColumn columnINSPECTIONPOINT;
            
            private global::System.Data.DataColumn columnJUDGMENTCRITERIA;
            
            private global::System.Data.DataColumn columnCOMMENTS;
            
            private global::System.Data.DataColumn columnBEFTYTLE;
            
            private global::System.Data.DataColumn columnAFTTYTLE;
            
            private global::System.Data.DataColumn columnAUTOJUDGEFLG;
            
            private global::System.Data.DataColumn columnREVISIONNUM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPITEMSUBMST_HDataTable() {
                this.TableName = "EQPITEMSUBMST_H";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal EQPITEMSUBMST_HDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected EQPITEMSUBMST_HDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EQPTYPEColumn {
                get {
                    return this.columnEQPTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ITEMCODEColumn {
                get {
                    return this.columnITEMCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SEQNUMColumn {
                get {
                    return this.columnSEQNUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SUBITEMNAMEColumn {
                get {
                    return this.columnSUBITEMNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SUBITEMIMGColumn {
                get {
                    return this.columnSUBITEMIMG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn INSPECTIONPOINTColumn {
                get {
                    return this.columnINSPECTIONPOINT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn JUDGMENTCRITERIAColumn {
                get {
                    return this.columnJUDGMENTCRITERIA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn COMMENTSColumn {
                get {
                    return this.columnCOMMENTS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BEFTYTLEColumn {
                get {
                    return this.columnBEFTYTLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AFTTYTLEColumn {
                get {
                    return this.columnAFTTYTLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AUTOJUDGEFLGColumn {
                get {
                    return this.columnAUTOJUDGEFLG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn REVISIONNUMColumn {
                get {
                    return this.columnREVISIONNUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPITEMSUBMST_HRow this[int index] {
                get {
                    return ((EQPITEMSUBMST_HRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event EQPITEMSUBMST_HRowChangeEventHandler EQPITEMSUBMST_HRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event EQPITEMSUBMST_HRowChangeEventHandler EQPITEMSUBMST_HRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event EQPITEMSUBMST_HRowChangeEventHandler EQPITEMSUBMST_HRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event EQPITEMSUBMST_HRowChangeEventHandler EQPITEMSUBMST_HRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddEQPITEMSUBMST_HRow(EQPITEMSUBMST_HRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPITEMSUBMST_HRow AddEQPITEMSUBMST_HRow(string EQPTYPE, string ITEMCODE, string SEQNUM, string SUBITEMNAME, string SUBITEMIMG, string INSPECTIONPOINT, string JUDGMENTCRITERIA, string COMMENTS, string BEFTYTLE, string AFTTYTLE, string AUTOJUDGEFLG, string REVISIONNUM) {
                EQPITEMSUBMST_HRow rowEQPITEMSUBMST_HRow = ((EQPITEMSUBMST_HRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        EQPTYPE,
                        ITEMCODE,
                        SEQNUM,
                        SUBITEMNAME,
                        SUBITEMIMG,
                        INSPECTIONPOINT,
                        JUDGMENTCRITERIA,
                        COMMENTS,
                        BEFTYTLE,
                        AFTTYTLE,
                        AUTOJUDGEFLG,
                        REVISIONNUM};
                rowEQPITEMSUBMST_HRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEQPITEMSUBMST_HRow);
                return rowEQPITEMSUBMST_HRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPITEMSUBMST_HRow FindByEQPTYPEITEMCODESEQNUMREVISIONNUM(string EQPTYPE, string ITEMCODE, string SEQNUM, string REVISIONNUM) {
                return ((EQPITEMSUBMST_HRow)(this.Rows.Find(new object[] {
                            EQPTYPE,
                            ITEMCODE,
                            SEQNUM,
                            REVISIONNUM})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                EQPITEMSUBMST_HDataTable cln = ((EQPITEMSUBMST_HDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EQPITEMSUBMST_HDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnEQPTYPE = base.Columns["EQPTYPE"];
                this.columnITEMCODE = base.Columns["ITEMCODE"];
                this.columnSEQNUM = base.Columns["SEQNUM"];
                this.columnSUBITEMNAME = base.Columns["SUBITEMNAME"];
                this.columnSUBITEMIMG = base.Columns["SUBITEMIMG"];
                this.columnINSPECTIONPOINT = base.Columns["INSPECTIONPOINT"];
                this.columnJUDGMENTCRITERIA = base.Columns["JUDGMENTCRITERIA"];
                this.columnCOMMENTS = base.Columns["COMMENTS"];
                this.columnBEFTYTLE = base.Columns["BEFTYTLE"];
                this.columnAFTTYTLE = base.Columns["AFTTYTLE"];
                this.columnAUTOJUDGEFLG = base.Columns["AUTOJUDGEFLG"];
                this.columnREVISIONNUM = base.Columns["REVISIONNUM"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnEQPTYPE = new global::System.Data.DataColumn("EQPTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEQPTYPE);
                this.columnITEMCODE = new global::System.Data.DataColumn("ITEMCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEMCODE);
                this.columnSEQNUM = new global::System.Data.DataColumn("SEQNUM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEQNUM);
                this.columnSUBITEMNAME = new global::System.Data.DataColumn("SUBITEMNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUBITEMNAME);
                this.columnSUBITEMIMG = new global::System.Data.DataColumn("SUBITEMIMG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUBITEMIMG);
                this.columnINSPECTIONPOINT = new global::System.Data.DataColumn("INSPECTIONPOINT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINSPECTIONPOINT);
                this.columnJUDGMENTCRITERIA = new global::System.Data.DataColumn("JUDGMENTCRITERIA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJUDGMENTCRITERIA);
                this.columnCOMMENTS = new global::System.Data.DataColumn("COMMENTS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMMENTS);
                this.columnBEFTYTLE = new global::System.Data.DataColumn("BEFTYTLE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBEFTYTLE);
                this.columnAFTTYTLE = new global::System.Data.DataColumn("AFTTYTLE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAFTTYTLE);
                this.columnAUTOJUDGEFLG = new global::System.Data.DataColumn("AUTOJUDGEFLG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAUTOJUDGEFLG);
                this.columnREVISIONNUM = new global::System.Data.DataColumn("REVISIONNUM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREVISIONNUM);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnEQPTYPE,
                                this.columnITEMCODE,
                                this.columnSEQNUM,
                                this.columnREVISIONNUM}, true));
                this.columnEQPTYPE.AllowDBNull = false;
                this.columnEQPTYPE.Caption = "装置タイプ";
                this.columnITEMCODE.AllowDBNull = false;
                this.columnITEMCODE.Caption = "点検項目コード";
                this.columnSEQNUM.AllowDBNull = false;
                this.columnSEQNUM.Caption = "シーケンス";
                this.columnSUBITEMNAME.Caption = "サブ点検項目名";
                this.columnSUBITEMIMG.Caption = "サブ点検項目画像";
                this.columnINSPECTIONPOINT.Caption = "点検個所";
                this.columnJUDGMENTCRITERIA.Caption = "判定基準";
                this.columnCOMMENTS.Caption = "コメント";
                this.columnBEFTYTLE.Caption = "処置前項目のタイトル";
                this.columnAFTTYTLE.Caption = "処置後項目のタイトル";
                this.columnAUTOJUDGEFLG.Caption = "自動判定フラグ";
                this.columnREVISIONNUM.AllowDBNull = false;
                this.columnREVISIONNUM.Caption = "リビジョン";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPITEMSUBMST_HRow NewEQPITEMSUBMST_HRow() {
                return ((EQPITEMSUBMST_HRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EQPITEMSUBMST_HRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(EQPITEMSUBMST_HRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EQPITEMSUBMST_HRowChanged != null)) {
                    this.EQPITEMSUBMST_HRowChanged(this, new EQPITEMSUBMST_HRowChangeEvent(((EQPITEMSUBMST_HRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EQPITEMSUBMST_HRowChanging != null)) {
                    this.EQPITEMSUBMST_HRowChanging(this, new EQPITEMSUBMST_HRowChangeEvent(((EQPITEMSUBMST_HRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EQPITEMSUBMST_HRowDeleted != null)) {
                    this.EQPITEMSUBMST_HRowDeleted(this, new EQPITEMSUBMST_HRowChangeEvent(((EQPITEMSUBMST_HRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EQPITEMSUBMST_HRowDeleting != null)) {
                    this.EQPITEMSUBMST_HRowDeleting(this, new EQPITEMSUBMST_HRowChangeEvent(((EQPITEMSUBMST_HRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveEQPITEMSUBMST_HRow(EQPITEMSUBMST_HRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EqpInspListDataSet ds = new EqpInspListDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EQPITEMSUBMST_HDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EQPINSPITEMDataTable : global::System.Data.TypedTableBase<EQPINSPITEMRow> {
            
            private global::System.Data.DataColumn columnEQPID;
            
            private global::System.Data.DataColumn columnINTERVAL;
            
            private global::System.Data.DataColumn columnSTREPORTDATE;
            
            private global::System.Data.DataColumn columnENREPORTDATE;
            
            private global::System.Data.DataColumn columnITEMCODE;
            
            private global::System.Data.DataColumn columnSEQNUM;
            
            private global::System.Data.DataColumn columnBEFRESULT;
            
            private global::System.Data.DataColumn columnAFTRESULT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPINSPITEMDataTable() {
                this.TableName = "EQPINSPITEM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal EQPINSPITEMDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected EQPINSPITEMDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EQPIDColumn {
                get {
                    return this.columnEQPID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn INTERVALColumn {
                get {
                    return this.columnINTERVAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn STREPORTDATEColumn {
                get {
                    return this.columnSTREPORTDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ENREPORTDATEColumn {
                get {
                    return this.columnENREPORTDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ITEMCODEColumn {
                get {
                    return this.columnITEMCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SEQNUMColumn {
                get {
                    return this.columnSEQNUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BEFRESULTColumn {
                get {
                    return this.columnBEFRESULT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AFTRESULTColumn {
                get {
                    return this.columnAFTRESULT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPINSPITEMRow this[int index] {
                get {
                    return ((EQPINSPITEMRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event EQPINSPITEMRowChangeEventHandler EQPINSPITEMRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event EQPINSPITEMRowChangeEventHandler EQPINSPITEMRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event EQPINSPITEMRowChangeEventHandler EQPINSPITEMRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event EQPINSPITEMRowChangeEventHandler EQPINSPITEMRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddEQPINSPITEMRow(EQPINSPITEMRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPINSPITEMRow AddEQPINSPITEMRow(string EQPID, string INTERVAL, string STREPORTDATE, string ENREPORTDATE, string ITEMCODE, string SEQNUM, string BEFRESULT, string AFTRESULT) {
                EQPINSPITEMRow rowEQPINSPITEMRow = ((EQPINSPITEMRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        EQPID,
                        INTERVAL,
                        STREPORTDATE,
                        ENREPORTDATE,
                        ITEMCODE,
                        SEQNUM,
                        BEFRESULT,
                        AFTRESULT};
                rowEQPINSPITEMRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEQPINSPITEMRow);
                return rowEQPINSPITEMRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPINSPITEMRow FindByEQPIDINTERVALSTREPORTDATEITEMCODESEQNUM(string EQPID, string INTERVAL, string STREPORTDATE, string ITEMCODE, string SEQNUM) {
                return ((EQPINSPITEMRow)(this.Rows.Find(new object[] {
                            EQPID,
                            INTERVAL,
                            STREPORTDATE,
                            ITEMCODE,
                            SEQNUM})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                EQPINSPITEMDataTable cln = ((EQPINSPITEMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EQPINSPITEMDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnEQPID = base.Columns["EQPID"];
                this.columnINTERVAL = base.Columns["INTERVAL"];
                this.columnSTREPORTDATE = base.Columns["STREPORTDATE"];
                this.columnENREPORTDATE = base.Columns["ENREPORTDATE"];
                this.columnITEMCODE = base.Columns["ITEMCODE"];
                this.columnSEQNUM = base.Columns["SEQNUM"];
                this.columnBEFRESULT = base.Columns["BEFRESULT"];
                this.columnAFTRESULT = base.Columns["AFTRESULT"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnEQPID = new global::System.Data.DataColumn("EQPID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEQPID);
                this.columnINTERVAL = new global::System.Data.DataColumn("INTERVAL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINTERVAL);
                this.columnSTREPORTDATE = new global::System.Data.DataColumn("STREPORTDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTREPORTDATE);
                this.columnENREPORTDATE = new global::System.Data.DataColumn("ENREPORTDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENREPORTDATE);
                this.columnITEMCODE = new global::System.Data.DataColumn("ITEMCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEMCODE);
                this.columnSEQNUM = new global::System.Data.DataColumn("SEQNUM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEQNUM);
                this.columnBEFRESULT = new global::System.Data.DataColumn("BEFRESULT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBEFRESULT);
                this.columnAFTRESULT = new global::System.Data.DataColumn("AFTRESULT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAFTRESULT);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnEQPID,
                                this.columnINTERVAL,
                                this.columnSTREPORTDATE,
                                this.columnITEMCODE,
                                this.columnSEQNUM}, true));
                this.columnEQPID.AllowDBNull = false;
                this.columnEQPID.Caption = "装置ID";
                this.columnINTERVAL.AllowDBNull = false;
                this.columnSTREPORTDATE.AllowDBNull = false;
                this.columnSTREPORTDATE.Caption = "実施開始日";
                this.columnENREPORTDATE.Caption = "実施終了日";
                this.columnITEMCODE.AllowDBNull = false;
                this.columnITEMCODE.Caption = "点検項目コード";
                this.columnSEQNUM.AllowDBNull = false;
                this.columnSEQNUM.Caption = "シーケンス";
                this.columnBEFRESULT.Caption = "判定（処置前）";
                this.columnAFTRESULT.Caption = "判定（処置後）";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPINSPITEMRow NewEQPINSPITEMRow() {
                return ((EQPINSPITEMRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EQPINSPITEMRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(EQPINSPITEMRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EQPINSPITEMRowChanged != null)) {
                    this.EQPINSPITEMRowChanged(this, new EQPINSPITEMRowChangeEvent(((EQPINSPITEMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EQPINSPITEMRowChanging != null)) {
                    this.EQPINSPITEMRowChanging(this, new EQPINSPITEMRowChangeEvent(((EQPINSPITEMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EQPINSPITEMRowDeleted != null)) {
                    this.EQPINSPITEMRowDeleted(this, new EQPINSPITEMRowChangeEvent(((EQPINSPITEMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EQPINSPITEMRowDeleting != null)) {
                    this.EQPINSPITEMRowDeleting(this, new EQPINSPITEMRowChangeEvent(((EQPINSPITEMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveEQPINSPITEMRow(EQPINSPITEMRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EqpInspListDataSet ds = new EqpInspListDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EQPINSPITEMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EQPITEMSUBEXPMST_HDataTable : global::System.Data.TypedTableBase<EQPITEMSUBEXPMST_HRow> {
            
            private global::System.Data.DataColumn columnEQPTYPE;
            
            private global::System.Data.DataColumn columnITEMCODE;
            
            private global::System.Data.DataColumn columnSEQNUM;
            
            private global::System.Data.DataColumn columnEXPSEQNUM;
            
            private global::System.Data.DataColumn columnITEMLABEL;
            
            private global::System.Data.DataColumn columnJUDGVALU1;
            
            private global::System.Data.DataColumn columnJUDGVALU2;
            
            private global::System.Data.DataColumn columnRANGECTG;
            
            private global::System.Data.DataColumn columnREVISIONNUM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPITEMSUBEXPMST_HDataTable() {
                this.TableName = "EQPITEMSUBEXPMST_H";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal EQPITEMSUBEXPMST_HDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected EQPITEMSUBEXPMST_HDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EQPTYPEColumn {
                get {
                    return this.columnEQPTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ITEMCODEColumn {
                get {
                    return this.columnITEMCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SEQNUMColumn {
                get {
                    return this.columnSEQNUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EXPSEQNUMColumn {
                get {
                    return this.columnEXPSEQNUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ITEMLABELColumn {
                get {
                    return this.columnITEMLABEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn JUDGVALU1Column {
                get {
                    return this.columnJUDGVALU1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn JUDGVALU2Column {
                get {
                    return this.columnJUDGVALU2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RANGECTGColumn {
                get {
                    return this.columnRANGECTG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn REVISIONNUMColumn {
                get {
                    return this.columnREVISIONNUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPITEMSUBEXPMST_HRow this[int index] {
                get {
                    return ((EQPITEMSUBEXPMST_HRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event EQPITEMSUBEXPMST_HRowChangeEventHandler EQPITEMSUBEXPMST_HRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event EQPITEMSUBEXPMST_HRowChangeEventHandler EQPITEMSUBEXPMST_HRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event EQPITEMSUBEXPMST_HRowChangeEventHandler EQPITEMSUBEXPMST_HRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event EQPITEMSUBEXPMST_HRowChangeEventHandler EQPITEMSUBEXPMST_HRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddEQPITEMSUBEXPMST_HRow(EQPITEMSUBEXPMST_HRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPITEMSUBEXPMST_HRow AddEQPITEMSUBEXPMST_HRow(string EQPTYPE, string ITEMCODE, string SEQNUM, string EXPSEQNUM, string ITEMLABEL, string JUDGVALU1, string JUDGVALU2, string RANGECTG, string REVISIONNUM) {
                EQPITEMSUBEXPMST_HRow rowEQPITEMSUBEXPMST_HRow = ((EQPITEMSUBEXPMST_HRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        EQPTYPE,
                        ITEMCODE,
                        SEQNUM,
                        EXPSEQNUM,
                        ITEMLABEL,
                        JUDGVALU1,
                        JUDGVALU2,
                        RANGECTG,
                        REVISIONNUM};
                rowEQPITEMSUBEXPMST_HRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEQPITEMSUBEXPMST_HRow);
                return rowEQPITEMSUBEXPMST_HRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPITEMSUBEXPMST_HRow FindByEQPTYPEITEMCODESEQNUMEXPSEQNUMREVISIONNUM(string EQPTYPE, string ITEMCODE, string SEQNUM, string EXPSEQNUM, string REVISIONNUM) {
                return ((EQPITEMSUBEXPMST_HRow)(this.Rows.Find(new object[] {
                            EQPTYPE,
                            ITEMCODE,
                            SEQNUM,
                            EXPSEQNUM,
                            REVISIONNUM})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                EQPITEMSUBEXPMST_HDataTable cln = ((EQPITEMSUBEXPMST_HDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EQPITEMSUBEXPMST_HDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnEQPTYPE = base.Columns["EQPTYPE"];
                this.columnITEMCODE = base.Columns["ITEMCODE"];
                this.columnSEQNUM = base.Columns["SEQNUM"];
                this.columnEXPSEQNUM = base.Columns["EXPSEQNUM"];
                this.columnITEMLABEL = base.Columns["ITEMLABEL"];
                this.columnJUDGVALU1 = base.Columns["JUDGVALU1"];
                this.columnJUDGVALU2 = base.Columns["JUDGVALU2"];
                this.columnRANGECTG = base.Columns["RANGECTG"];
                this.columnREVISIONNUM = base.Columns["REVISIONNUM"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnEQPTYPE = new global::System.Data.DataColumn("EQPTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEQPTYPE);
                this.columnITEMCODE = new global::System.Data.DataColumn("ITEMCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEMCODE);
                this.columnSEQNUM = new global::System.Data.DataColumn("SEQNUM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEQNUM);
                this.columnEXPSEQNUM = new global::System.Data.DataColumn("EXPSEQNUM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXPSEQNUM);
                this.columnITEMLABEL = new global::System.Data.DataColumn("ITEMLABEL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEMLABEL);
                this.columnJUDGVALU1 = new global::System.Data.DataColumn("JUDGVALU1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJUDGVALU1);
                this.columnJUDGVALU2 = new global::System.Data.DataColumn("JUDGVALU2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJUDGVALU2);
                this.columnRANGECTG = new global::System.Data.DataColumn("RANGECTG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRANGECTG);
                this.columnREVISIONNUM = new global::System.Data.DataColumn("REVISIONNUM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREVISIONNUM);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnEQPTYPE,
                                this.columnITEMCODE,
                                this.columnSEQNUM,
                                this.columnEXPSEQNUM,
                                this.columnREVISIONNUM}, true));
                this.columnEQPTYPE.AllowDBNull = false;
                this.columnEQPTYPE.Caption = "装置タイプ";
                this.columnITEMCODE.AllowDBNull = false;
                this.columnITEMCODE.Caption = "点検項目コード";
                this.columnSEQNUM.AllowDBNull = false;
                this.columnSEQNUM.Caption = "シーケンス";
                this.columnEXPSEQNUM.AllowDBNull = false;
                this.columnEXPSEQNUM.Caption = "拡張シーケンス";
                this.columnITEMLABEL.Caption = "項目ラベル";
                this.columnJUDGVALU1.Caption = "判定値1";
                this.columnJUDGVALU2.Caption = "判定値2";
                this.columnRANGECTG.Caption = "範囲区分";
                this.columnREVISIONNUM.AllowDBNull = false;
                this.columnREVISIONNUM.Caption = "リビジョン";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPITEMSUBEXPMST_HRow NewEQPITEMSUBEXPMST_HRow() {
                return ((EQPITEMSUBEXPMST_HRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EQPITEMSUBEXPMST_HRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(EQPITEMSUBEXPMST_HRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EQPITEMSUBEXPMST_HRowChanged != null)) {
                    this.EQPITEMSUBEXPMST_HRowChanged(this, new EQPITEMSUBEXPMST_HRowChangeEvent(((EQPITEMSUBEXPMST_HRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EQPITEMSUBEXPMST_HRowChanging != null)) {
                    this.EQPITEMSUBEXPMST_HRowChanging(this, new EQPITEMSUBEXPMST_HRowChangeEvent(((EQPITEMSUBEXPMST_HRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EQPITEMSUBEXPMST_HRowDeleted != null)) {
                    this.EQPITEMSUBEXPMST_HRowDeleted(this, new EQPITEMSUBEXPMST_HRowChangeEvent(((EQPITEMSUBEXPMST_HRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EQPITEMSUBEXPMST_HRowDeleting != null)) {
                    this.EQPITEMSUBEXPMST_HRowDeleting(this, new EQPITEMSUBEXPMST_HRowChangeEvent(((EQPITEMSUBEXPMST_HRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveEQPITEMSUBEXPMST_HRow(EQPITEMSUBEXPMST_HRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EqpInspListDataSet ds = new EqpInspListDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EQPITEMSUBEXPMST_HDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EQPINSPITEMEXPDataTable : global::System.Data.TypedTableBase<EQPINSPITEMEXPRow> {
            
            private global::System.Data.DataColumn columnEQPID;
            
            private global::System.Data.DataColumn columnINTERVAL;
            
            private global::System.Data.DataColumn columnSTREPORTDATE;
            
            private global::System.Data.DataColumn columnENREPORTDATE;
            
            private global::System.Data.DataColumn columnITEMCODE;
            
            private global::System.Data.DataColumn columnSEQNUM;
            
            private global::System.Data.DataColumn columnEXPSEQNUM;
            
            private global::System.Data.DataColumn columnBEFVALUE;
            
            private global::System.Data.DataColumn columnAFTVALUE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPINSPITEMEXPDataTable() {
                this.TableName = "EQPINSPITEMEXP";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal EQPINSPITEMEXPDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected EQPINSPITEMEXPDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EQPIDColumn {
                get {
                    return this.columnEQPID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn INTERVALColumn {
                get {
                    return this.columnINTERVAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn STREPORTDATEColumn {
                get {
                    return this.columnSTREPORTDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ENREPORTDATEColumn {
                get {
                    return this.columnENREPORTDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ITEMCODEColumn {
                get {
                    return this.columnITEMCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SEQNUMColumn {
                get {
                    return this.columnSEQNUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EXPSEQNUMColumn {
                get {
                    return this.columnEXPSEQNUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BEFVALUEColumn {
                get {
                    return this.columnBEFVALUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AFTVALUEColumn {
                get {
                    return this.columnAFTVALUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPINSPITEMEXPRow this[int index] {
                get {
                    return ((EQPINSPITEMEXPRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event EQPINSPITEMEXPRowChangeEventHandler EQPINSPITEMEXPRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event EQPINSPITEMEXPRowChangeEventHandler EQPINSPITEMEXPRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event EQPINSPITEMEXPRowChangeEventHandler EQPINSPITEMEXPRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event EQPINSPITEMEXPRowChangeEventHandler EQPINSPITEMEXPRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddEQPINSPITEMEXPRow(EQPINSPITEMEXPRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPINSPITEMEXPRow AddEQPINSPITEMEXPRow(string EQPID, string INTERVAL, string STREPORTDATE, string ENREPORTDATE, string ITEMCODE, string SEQNUM, string EXPSEQNUM, string BEFVALUE, string AFTVALUE) {
                EQPINSPITEMEXPRow rowEQPINSPITEMEXPRow = ((EQPINSPITEMEXPRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        EQPID,
                        INTERVAL,
                        STREPORTDATE,
                        ENREPORTDATE,
                        ITEMCODE,
                        SEQNUM,
                        EXPSEQNUM,
                        BEFVALUE,
                        AFTVALUE};
                rowEQPINSPITEMEXPRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEQPINSPITEMEXPRow);
                return rowEQPINSPITEMEXPRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPINSPITEMEXPRow FindByEQPIDINTERVALSTREPORTDATEITEMCODESEQNUMEXPSEQNUM(string EQPID, string INTERVAL, string STREPORTDATE, string ITEMCODE, string SEQNUM, string EXPSEQNUM) {
                return ((EQPINSPITEMEXPRow)(this.Rows.Find(new object[] {
                            EQPID,
                            INTERVAL,
                            STREPORTDATE,
                            ITEMCODE,
                            SEQNUM,
                            EXPSEQNUM})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                EQPINSPITEMEXPDataTable cln = ((EQPINSPITEMEXPDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EQPINSPITEMEXPDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnEQPID = base.Columns["EQPID"];
                this.columnINTERVAL = base.Columns["INTERVAL"];
                this.columnSTREPORTDATE = base.Columns["STREPORTDATE"];
                this.columnENREPORTDATE = base.Columns["ENREPORTDATE"];
                this.columnITEMCODE = base.Columns["ITEMCODE"];
                this.columnSEQNUM = base.Columns["SEQNUM"];
                this.columnEXPSEQNUM = base.Columns["EXPSEQNUM"];
                this.columnBEFVALUE = base.Columns["BEFVALUE"];
                this.columnAFTVALUE = base.Columns["AFTVALUE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnEQPID = new global::System.Data.DataColumn("EQPID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEQPID);
                this.columnINTERVAL = new global::System.Data.DataColumn("INTERVAL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINTERVAL);
                this.columnSTREPORTDATE = new global::System.Data.DataColumn("STREPORTDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTREPORTDATE);
                this.columnENREPORTDATE = new global::System.Data.DataColumn("ENREPORTDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENREPORTDATE);
                this.columnITEMCODE = new global::System.Data.DataColumn("ITEMCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEMCODE);
                this.columnSEQNUM = new global::System.Data.DataColumn("SEQNUM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEQNUM);
                this.columnEXPSEQNUM = new global::System.Data.DataColumn("EXPSEQNUM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXPSEQNUM);
                this.columnBEFVALUE = new global::System.Data.DataColumn("BEFVALUE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBEFVALUE);
                this.columnAFTVALUE = new global::System.Data.DataColumn("AFTVALUE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAFTVALUE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnEQPID,
                                this.columnINTERVAL,
                                this.columnSTREPORTDATE,
                                this.columnITEMCODE,
                                this.columnSEQNUM,
                                this.columnEXPSEQNUM}, true));
                this.columnEQPID.AllowDBNull = false;
                this.columnEQPID.Caption = "装置ID";
                this.columnINTERVAL.AllowDBNull = false;
                this.columnSTREPORTDATE.AllowDBNull = false;
                this.columnSTREPORTDATE.Caption = "実施開始日";
                this.columnENREPORTDATE.Caption = "実施終了日";
                this.columnITEMCODE.AllowDBNull = false;
                this.columnITEMCODE.Caption = "点検項目コード";
                this.columnSEQNUM.AllowDBNull = false;
                this.columnSEQNUM.Caption = "シーケンス";
                this.columnEXPSEQNUM.AllowDBNull = false;
                this.columnEXPSEQNUM.Caption = "拡張シーケンス";
                this.columnBEFVALUE.Caption = "測定値(処置前)";
                this.columnAFTVALUE.Caption = "測定値(処置後)";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPINSPITEMEXPRow NewEQPINSPITEMEXPRow() {
                return ((EQPINSPITEMEXPRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EQPINSPITEMEXPRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(EQPINSPITEMEXPRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EQPINSPITEMEXPRowChanged != null)) {
                    this.EQPINSPITEMEXPRowChanged(this, new EQPINSPITEMEXPRowChangeEvent(((EQPINSPITEMEXPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EQPINSPITEMEXPRowChanging != null)) {
                    this.EQPINSPITEMEXPRowChanging(this, new EQPINSPITEMEXPRowChangeEvent(((EQPINSPITEMEXPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EQPINSPITEMEXPRowDeleted != null)) {
                    this.EQPINSPITEMEXPRowDeleted(this, new EQPINSPITEMEXPRowChangeEvent(((EQPINSPITEMEXPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EQPINSPITEMEXPRowDeleting != null)) {
                    this.EQPINSPITEMEXPRowDeleting(this, new EQPINSPITEMEXPRowChangeEvent(((EQPINSPITEMEXPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveEQPINSPITEMEXPRow(EQPINSPITEMEXPRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EqpInspListDataSet ds = new EqpInspListDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EQPINSPITEMEXPDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EQPMAINMST_HDataTable : global::System.Data.TypedTableBase<EQPMAINMST_HRow> {
            
            private global::System.Data.DataColumn columnEQPTYPE;
            
            private global::System.Data.DataColumn columnLINEFLG;
            
            private global::System.Data.DataColumn columnINSPECTIONNAME;
            
            private global::System.Data.DataColumn columnREVISIONNUM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPMAINMST_HDataTable() {
                this.TableName = "EQPMAINMST_H";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal EQPMAINMST_HDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected EQPMAINMST_HDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EQPTYPEColumn {
                get {
                    return this.columnEQPTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LINEFLGColumn {
                get {
                    return this.columnLINEFLG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn INSPECTIONNAMEColumn {
                get {
                    return this.columnINSPECTIONNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn REVISIONNUMColumn {
                get {
                    return this.columnREVISIONNUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPMAINMST_HRow this[int index] {
                get {
                    return ((EQPMAINMST_HRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event EQPMAINMST_HRowChangeEventHandler EQPMAINMST_HRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event EQPMAINMST_HRowChangeEventHandler EQPMAINMST_HRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event EQPMAINMST_HRowChangeEventHandler EQPMAINMST_HRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event EQPMAINMST_HRowChangeEventHandler EQPMAINMST_HRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddEQPMAINMST_HRow(EQPMAINMST_HRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPMAINMST_HRow AddEQPMAINMST_HRow(string EQPTYPE, string LINEFLG, string INSPECTIONNAME, string REVISIONNUM) {
                EQPMAINMST_HRow rowEQPMAINMST_HRow = ((EQPMAINMST_HRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        EQPTYPE,
                        LINEFLG,
                        INSPECTIONNAME,
                        REVISIONNUM};
                rowEQPMAINMST_HRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEQPMAINMST_HRow);
                return rowEQPMAINMST_HRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPMAINMST_HRow FindByEQPTYPEREVISIONNUM(string EQPTYPE, string REVISIONNUM) {
                return ((EQPMAINMST_HRow)(this.Rows.Find(new object[] {
                            EQPTYPE,
                            REVISIONNUM})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                EQPMAINMST_HDataTable cln = ((EQPMAINMST_HDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EQPMAINMST_HDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnEQPTYPE = base.Columns["EQPTYPE"];
                this.columnLINEFLG = base.Columns["LINEFLG"];
                this.columnINSPECTIONNAME = base.Columns["INSPECTIONNAME"];
                this.columnREVISIONNUM = base.Columns["REVISIONNUM"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnEQPTYPE = new global::System.Data.DataColumn("EQPTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEQPTYPE);
                this.columnLINEFLG = new global::System.Data.DataColumn("LINEFLG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLINEFLG);
                this.columnINSPECTIONNAME = new global::System.Data.DataColumn("INSPECTIONNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINSPECTIONNAME);
                this.columnREVISIONNUM = new global::System.Data.DataColumn("REVISIONNUM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREVISIONNUM);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnEQPTYPE,
                                this.columnREVISIONNUM}, true));
                this.columnEQPTYPE.AllowDBNull = false;
                this.columnREVISIONNUM.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPMAINMST_HRow NewEQPMAINMST_HRow() {
                return ((EQPMAINMST_HRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EQPMAINMST_HRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(EQPMAINMST_HRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EQPMAINMST_HRowChanged != null)) {
                    this.EQPMAINMST_HRowChanged(this, new EQPMAINMST_HRowChangeEvent(((EQPMAINMST_HRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EQPMAINMST_HRowChanging != null)) {
                    this.EQPMAINMST_HRowChanging(this, new EQPMAINMST_HRowChangeEvent(((EQPMAINMST_HRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EQPMAINMST_HRowDeleted != null)) {
                    this.EQPMAINMST_HRowDeleted(this, new EQPMAINMST_HRowChangeEvent(((EQPMAINMST_HRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EQPMAINMST_HRowDeleting != null)) {
                    this.EQPMAINMST_HRowDeleting(this, new EQPMAINMST_HRowChangeEvent(((EQPMAINMST_HRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveEQPMAINMST_HRow(EQPMAINMST_HRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EqpInspListDataSet ds = new EqpInspListDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EQPMAINMST_HDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EQPINSP_LISTDataTable : global::System.Data.TypedTableBase<EQPINSP_LISTRow> {
            
            private global::System.Data.DataColumn columnINSPECTIONNAME;
            
            private global::System.Data.DataColumn columnEQPID;
            
            private global::System.Data.DataColumn columnRESULT;
            
            private global::System.Data.DataColumn columnINTERVAL;
            
            private global::System.Data.DataColumn columnSTREPORTDATE;
            
            private global::System.Data.DataColumn columnENREPORTDATE;
            
            private global::System.Data.DataColumn columnFLOOR;
            
            private global::System.Data.DataColumn columnIMPLOPERATORNAME;
            
            private global::System.Data.DataColumn columnRESPOPERATORNAME;
            
            private global::System.Data.DataColumn columnSERIALNUM;
            
            private global::System.Data.DataColumn columnASSETNUM;
            
            private global::System.Data.DataColumn columnEQPTYPE;
            
            private global::System.Data.DataColumn columnREVISIONNUM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPINSP_LISTDataTable() {
                this.TableName = "EQPINSP_LIST";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal EQPINSP_LISTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected EQPINSP_LISTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn INSPECTIONNAMEColumn {
                get {
                    return this.columnINSPECTIONNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EQPIDColumn {
                get {
                    return this.columnEQPID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RESULTColumn {
                get {
                    return this.columnRESULT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn INTERVALColumn {
                get {
                    return this.columnINTERVAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn STREPORTDATEColumn {
                get {
                    return this.columnSTREPORTDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ENREPORTDATEColumn {
                get {
                    return this.columnENREPORTDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FLOORColumn {
                get {
                    return this.columnFLOOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IMPLOPERATORNAMEColumn {
                get {
                    return this.columnIMPLOPERATORNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RESPOPERATORNAMEColumn {
                get {
                    return this.columnRESPOPERATORNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SERIALNUMColumn {
                get {
                    return this.columnSERIALNUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ASSETNUMColumn {
                get {
                    return this.columnASSETNUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EQPTYPEColumn {
                get {
                    return this.columnEQPTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn REVISIONNUMColumn {
                get {
                    return this.columnREVISIONNUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPINSP_LISTRow this[int index] {
                get {
                    return ((EQPINSP_LISTRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event EQPINSP_LISTRowChangeEventHandler EQPINSP_LISTRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event EQPINSP_LISTRowChangeEventHandler EQPINSP_LISTRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event EQPINSP_LISTRowChangeEventHandler EQPINSP_LISTRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event EQPINSP_LISTRowChangeEventHandler EQPINSP_LISTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddEQPINSP_LISTRow(EQPINSP_LISTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPINSP_LISTRow AddEQPINSP_LISTRow(string INSPECTIONNAME, string EQPID, string RESULT, string INTERVAL, string STREPORTDATE, string ENREPORTDATE, string FLOOR, string IMPLOPERATORNAME, string RESPOPERATORNAME, string SERIALNUM, string ASSETNUM, string EQPTYPE, string REVISIONNUM) {
                EQPINSP_LISTRow rowEQPINSP_LISTRow = ((EQPINSP_LISTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        INSPECTIONNAME,
                        EQPID,
                        RESULT,
                        INTERVAL,
                        STREPORTDATE,
                        ENREPORTDATE,
                        FLOOR,
                        IMPLOPERATORNAME,
                        RESPOPERATORNAME,
                        SERIALNUM,
                        ASSETNUM,
                        EQPTYPE,
                        REVISIONNUM};
                rowEQPINSP_LISTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEQPINSP_LISTRow);
                return rowEQPINSP_LISTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPINSP_LISTRow FindByEQPIDINTERVALSTREPORTDATE(string EQPID, string INTERVAL, string STREPORTDATE) {
                return ((EQPINSP_LISTRow)(this.Rows.Find(new object[] {
                            EQPID,
                            INTERVAL,
                            STREPORTDATE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                EQPINSP_LISTDataTable cln = ((EQPINSP_LISTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EQPINSP_LISTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnINSPECTIONNAME = base.Columns["INSPECTIONNAME"];
                this.columnEQPID = base.Columns["EQPID"];
                this.columnRESULT = base.Columns["RESULT"];
                this.columnINTERVAL = base.Columns["INTERVAL"];
                this.columnSTREPORTDATE = base.Columns["STREPORTDATE"];
                this.columnENREPORTDATE = base.Columns["ENREPORTDATE"];
                this.columnFLOOR = base.Columns["FLOOR"];
                this.columnIMPLOPERATORNAME = base.Columns["IMPLOPERATORNAME"];
                this.columnRESPOPERATORNAME = base.Columns["RESPOPERATORNAME"];
                this.columnSERIALNUM = base.Columns["SERIALNUM"];
                this.columnASSETNUM = base.Columns["ASSETNUM"];
                this.columnEQPTYPE = base.Columns["EQPTYPE"];
                this.columnREVISIONNUM = base.Columns["REVISIONNUM"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnINSPECTIONNAME = new global::System.Data.DataColumn("INSPECTIONNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINSPECTIONNAME);
                this.columnEQPID = new global::System.Data.DataColumn("EQPID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEQPID);
                this.columnRESULT = new global::System.Data.DataColumn("RESULT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRESULT);
                this.columnINTERVAL = new global::System.Data.DataColumn("INTERVAL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINTERVAL);
                this.columnSTREPORTDATE = new global::System.Data.DataColumn("STREPORTDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTREPORTDATE);
                this.columnENREPORTDATE = new global::System.Data.DataColumn("ENREPORTDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENREPORTDATE);
                this.columnFLOOR = new global::System.Data.DataColumn("FLOOR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLOOR);
                this.columnIMPLOPERATORNAME = new global::System.Data.DataColumn("IMPLOPERATORNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIMPLOPERATORNAME);
                this.columnRESPOPERATORNAME = new global::System.Data.DataColumn("RESPOPERATORNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRESPOPERATORNAME);
                this.columnSERIALNUM = new global::System.Data.DataColumn("SERIALNUM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSERIALNUM);
                this.columnASSETNUM = new global::System.Data.DataColumn("ASSETNUM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnASSETNUM);
                this.columnEQPTYPE = new global::System.Data.DataColumn("EQPTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEQPTYPE);
                this.columnREVISIONNUM = new global::System.Data.DataColumn("REVISIONNUM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREVISIONNUM);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnEQPID,
                                this.columnINTERVAL,
                                this.columnSTREPORTDATE}, true));
                this.columnINSPECTIONNAME.Caption = "点検名称";
                this.columnEQPID.AllowDBNull = false;
                this.columnEQPID.Caption = "装置ID";
                this.columnRESULT.Caption = "結果";
                this.columnINTERVAL.AllowDBNull = false;
                this.columnINTERVAL.Caption = "点検頻度";
                this.columnSTREPORTDATE.AllowDBNull = false;
                this.columnSTREPORTDATE.Caption = "開始日";
                this.columnENREPORTDATE.Caption = "終了日";
                this.columnFLOOR.Caption = "フロア";
                this.columnIMPLOPERATORNAME.Caption = "実施者";
                this.columnRESPOPERATORNAME.Caption = "担当者";
                this.columnSERIALNUM.Caption = "製造番号";
                this.columnASSETNUM.Caption = "資産番号";
                this.columnEQPTYPE.AllowDBNull = false;
                this.columnEQPTYPE.Caption = "装置タイプ";
                this.columnREVISIONNUM.Caption = "リビジョン";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPINSP_LISTRow NewEQPINSP_LISTRow() {
                return ((EQPINSP_LISTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EQPINSP_LISTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(EQPINSP_LISTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EQPINSP_LISTRowChanged != null)) {
                    this.EQPINSP_LISTRowChanged(this, new EQPINSP_LISTRowChangeEvent(((EQPINSP_LISTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EQPINSP_LISTRowChanging != null)) {
                    this.EQPINSP_LISTRowChanging(this, new EQPINSP_LISTRowChangeEvent(((EQPINSP_LISTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EQPINSP_LISTRowDeleted != null)) {
                    this.EQPINSP_LISTRowDeleted(this, new EQPINSP_LISTRowChangeEvent(((EQPINSP_LISTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EQPINSP_LISTRowDeleting != null)) {
                    this.EQPINSP_LISTRowDeleting(this, new EQPINSP_LISTRowChangeEvent(((EQPINSP_LISTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveEQPINSP_LISTRow(EQPINSP_LISTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EqpInspListDataSet ds = new EqpInspListDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EQPINSP_LISTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class EQPINSPRow : global::System.Data.DataRow {
            
            private EQPINSPDataTable tableEQPINSP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal EQPINSPRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEQPINSP = ((EQPINSPDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EQPID {
                get {
                    return ((string)(this[this.tableEQPINSP.EQPIDColumn]));
                }
                set {
                    this[this.tableEQPINSP.EQPIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string INTERVAL {
                get {
                    return ((string)(this[this.tableEQPINSP.INTERVALColumn]));
                }
                set {
                    this[this.tableEQPINSP.INTERVALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EQPTYPE {
                get {
                    return ((string)(this[this.tableEQPINSP.EQPTYPEColumn]));
                }
                set {
                    this[this.tableEQPINSP.EQPTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SERIALNUM {
                get {
                    try {
                        return ((string)(this[this.tableEQPINSP.SERIALNUMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'EQPINSP\' にある列 \'SERIALNUM\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableEQPINSP.SERIALNUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ASSETNUM {
                get {
                    try {
                        return ((string)(this[this.tableEQPINSP.ASSETNUMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'EQPINSP\' にある列 \'ASSETNUM\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableEQPINSP.ASSETNUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string STREPORTDATE {
                get {
                    return ((string)(this[this.tableEQPINSP.STREPORTDATEColumn]));
                }
                set {
                    this[this.tableEQPINSP.STREPORTDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ENREPORTDATE {
                get {
                    try {
                        return ((string)(this[this.tableEQPINSP.ENREPORTDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'EQPINSP\' にある列 \'ENREPORTDATE\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableEQPINSP.ENREPORTDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FLOOR {
                get {
                    try {
                        return ((string)(this[this.tableEQPINSP.FLOORColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'EQPINSP\' にある列 \'FLOOR\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableEQPINSP.FLOORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string IMPLOPERATORNAME {
                get {
                    try {
                        return ((string)(this[this.tableEQPINSP.IMPLOPERATORNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'EQPINSP\' にある列 \'IMPLOPERATORNAME\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableEQPINSP.IMPLOPERATORNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RESPOPERATORNAME {
                get {
                    try {
                        return ((string)(this[this.tableEQPINSP.RESPOPERATORNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'EQPINSP\' にある列 \'RESPOPERATORNAME\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableEQPINSP.RESPOPERATORNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RESULT {
                get {
                    try {
                        return ((string)(this[this.tableEQPINSP.RESULTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'EQPINSP\' にある列 \'RESULT\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableEQPINSP.RESULTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string REVISIONNUM {
                get {
                    try {
                        return ((string)(this[this.tableEQPINSP.REVISIONNUMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'EQPINSP\' にある列 \'REVISIONNUM\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableEQPINSP.REVISIONNUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string INSPECTIONNAME {
                get {
                    try {
                        return ((string)(this[this.tableEQPINSP.INSPECTIONNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'EQPINSP\' にある列 \'INSPECTIONNAME\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableEQPINSP.INSPECTIONNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPMAINMST_HRow EQPMAINMST_HRowParent {
                get {
                    return ((EQPMAINMST_HRow)(this.GetParentRow(this.Table.ParentRelations["EQPMAINMST_EQPINSP"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["EQPMAINMST_EQPINSP"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSERIALNUMNull() {
                return this.IsNull(this.tableEQPINSP.SERIALNUMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSERIALNUMNull() {
                this[this.tableEQPINSP.SERIALNUMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsASSETNUMNull() {
                return this.IsNull(this.tableEQPINSP.ASSETNUMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetASSETNUMNull() {
                this[this.tableEQPINSP.ASSETNUMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsENREPORTDATENull() {
                return this.IsNull(this.tableEQPINSP.ENREPORTDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetENREPORTDATENull() {
                this[this.tableEQPINSP.ENREPORTDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFLOORNull() {
                return this.IsNull(this.tableEQPINSP.FLOORColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFLOORNull() {
                this[this.tableEQPINSP.FLOORColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsIMPLOPERATORNAMENull() {
                return this.IsNull(this.tableEQPINSP.IMPLOPERATORNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetIMPLOPERATORNAMENull() {
                this[this.tableEQPINSP.IMPLOPERATORNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRESPOPERATORNAMENull() {
                return this.IsNull(this.tableEQPINSP.RESPOPERATORNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRESPOPERATORNAMENull() {
                this[this.tableEQPINSP.RESPOPERATORNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRESULTNull() {
                return this.IsNull(this.tableEQPINSP.RESULTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRESULTNull() {
                this[this.tableEQPINSP.RESULTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsREVISIONNUMNull() {
                return this.IsNull(this.tableEQPINSP.REVISIONNUMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetREVISIONNUMNull() {
                this[this.tableEQPINSP.REVISIONNUMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsINSPECTIONNAMENull() {
                return this.IsNull(this.tableEQPINSP.INSPECTIONNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetINSPECTIONNAMENull() {
                this[this.tableEQPINSP.INSPECTIONNAMEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class EQPINSPMETERHISTRow : global::System.Data.DataRow {
            
            private EQPINSPMETERHISTDataTable tableEQPINSPMETERHIST;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal EQPINSPMETERHISTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEQPINSPMETERHIST = ((EQPINSPMETERHISTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EQPID {
                get {
                    return ((string)(this[this.tableEQPINSPMETERHIST.EQPIDColumn]));
                }
                set {
                    this[this.tableEQPINSPMETERHIST.EQPIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string INTERVAL {
                get {
                    return ((string)(this[this.tableEQPINSPMETERHIST.INTERVALColumn]));
                }
                set {
                    this[this.tableEQPINSPMETERHIST.INTERVALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string STREPORTDATE {
                get {
                    return ((string)(this[this.tableEQPINSPMETERHIST.STREPORTDATEColumn]));
                }
                set {
                    this[this.tableEQPINSPMETERHIST.STREPORTDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ENREPORTDATE {
                get {
                    try {
                        return ((string)(this[this.tableEQPINSPMETERHIST.ENREPORTDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'EQPINSPMETERHIST\' にある列 \'ENREPORTDATE\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableEQPINSPMETERHIST.ENREPORTDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MODEL {
                get {
                    return ((string)(this[this.tableEQPINSPMETERHIST.MODELColumn]));
                }
                set {
                    this[this.tableEQPINSPMETERHIST.MODELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SERIALNUM {
                get {
                    return ((string)(this[this.tableEQPINSPMETERHIST.SERIALNUMColumn]));
                }
                set {
                    this[this.tableEQPINSPMETERHIST.SERIALNUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string INOROUTPRDCT {
                get {
                    try {
                        return ((string)(this[this.tableEQPINSPMETERHIST.INOROUTPRDCTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'EQPINSPMETERHIST\' にある列 \'INOROUTPRDCT\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableEQPINSPMETERHIST.INOROUTPRDCTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LIMITDATE {
                get {
                    try {
                        return ((string)(this[this.tableEQPINSPMETERHIST.LIMITDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'EQPINSPMETERHIST\' にある列 \'LIMITDATE\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableEQPINSPMETERHIST.LIMITDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CONTROLNUM {
                get {
                    try {
                        return ((string)(this[this.tableEQPINSPMETERHIST.CONTROLNUMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'EQPINSPMETERHIST\' にある列 \'CONTROLNUM\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableEQPINSPMETERHIST.CONTROLNUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPINSPMETERRow EQPINSPMETERRowParent {
                get {
                    return ((EQPINSPMETERRow)(this.GetParentRow(this.Table.ParentRelations["EQPINSPMETER_EQPINSPMETERHIST"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["EQPINSPMETER_EQPINSPMETERHIST"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsENREPORTDATENull() {
                return this.IsNull(this.tableEQPINSPMETERHIST.ENREPORTDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetENREPORTDATENull() {
                this[this.tableEQPINSPMETERHIST.ENREPORTDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsINOROUTPRDCTNull() {
                return this.IsNull(this.tableEQPINSPMETERHIST.INOROUTPRDCTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetINOROUTPRDCTNull() {
                this[this.tableEQPINSPMETERHIST.INOROUTPRDCTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLIMITDATENull() {
                return this.IsNull(this.tableEQPINSPMETERHIST.LIMITDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLIMITDATENull() {
                this[this.tableEQPINSPMETERHIST.LIMITDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCONTROLNUMNull() {
                return this.IsNull(this.tableEQPINSPMETERHIST.CONTROLNUMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCONTROLNUMNull() {
                this[this.tableEQPINSPMETERHIST.CONTROLNUMColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class EQPINSPMETERRow : global::System.Data.DataRow {
            
            private EQPINSPMETERDataTable tableEQPINSPMETER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal EQPINSPMETERRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEQPINSPMETER = ((EQPINSPMETERDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MODEL {
                get {
                    return ((string)(this[this.tableEQPINSPMETER.MODELColumn]));
                }
                set {
                    this[this.tableEQPINSPMETER.MODELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SERIALNUM {
                get {
                    return ((string)(this[this.tableEQPINSPMETER.SERIALNUMColumn]));
                }
                set {
                    this[this.tableEQPINSPMETER.SERIALNUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DEVICENAME {
                get {
                    try {
                        return ((string)(this[this.tableEQPINSPMETER.DEVICENAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'EQPINSPMETER\' にある列 \'DEVICENAME\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableEQPINSPMETER.DEVICENAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MAKER {
                get {
                    try {
                        return ((string)(this[this.tableEQPINSPMETER.MAKERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'EQPINSPMETER\' にある列 \'MAKER\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableEQPINSPMETER.MAKERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDEVICENAMENull() {
                return this.IsNull(this.tableEQPINSPMETER.DEVICENAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDEVICENAMENull() {
                this[this.tableEQPINSPMETER.DEVICENAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMAKERNull() {
                return this.IsNull(this.tableEQPINSPMETER.MAKERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMAKERNull() {
                this[this.tableEQPINSPMETER.MAKERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPINSPMETERHISTRow[] GetEQPINSPMETERHISTRows() {
                if ((this.Table.ChildRelations["EQPINSPMETER_EQPINSPMETERHIST"] == null)) {
                    return new EQPINSPMETERHISTRow[0];
                }
                else {
                    return ((EQPINSPMETERHISTRow[])(base.GetChildRows(this.Table.ChildRelations["EQPINSPMETER_EQPINSPMETERHIST"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class EQPITEMMST_HRow : global::System.Data.DataRow {
            
            private EQPITEMMST_HDataTable tableEQPITEMMST_H;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal EQPITEMMST_HRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEQPITEMMST_H = ((EQPITEMMST_HDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EQPTYPE {
                get {
                    return ((string)(this[this.tableEQPITEMMST_H.EQPTYPEColumn]));
                }
                set {
                    this[this.tableEQPITEMMST_H.EQPTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ITEMCODE {
                get {
                    return ((string)(this[this.tableEQPITEMMST_H.ITEMCODEColumn]));
                }
                set {
                    this[this.tableEQPITEMMST_H.ITEMCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ITEMNAME {
                get {
                    try {
                        return ((string)(this[this.tableEQPITEMMST_H.ITEMNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'EQPITEMMST_H\' にある列 \'ITEMNAME\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableEQPITEMMST_H.ITEMNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SUBITEM1 {
                get {
                    try {
                        return ((string)(this[this.tableEQPITEMMST_H.SUBITEM1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'EQPITEMMST_H\' にある列 \'SUBITEM1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableEQPITEMMST_H.SUBITEM1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SUBITEM2 {
                get {
                    try {
                        return ((string)(this[this.tableEQPITEMMST_H.SUBITEM2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'EQPITEMMST_H\' にある列 \'SUBITEM2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableEQPITEMMST_H.SUBITEM2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SUBITEM3 {
                get {
                    try {
                        return ((string)(this[this.tableEQPITEMMST_H.SUBITEM3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'EQPITEMMST_H\' にある列 \'SUBITEM3\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableEQPITEMMST_H.SUBITEM3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string REVISIONNUM {
                get {
                    return ((string)(this[this.tableEQPITEMMST_H.REVISIONNUMColumn]));
                }
                set {
                    this[this.tableEQPITEMMST_H.REVISIONNUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsITEMNAMENull() {
                return this.IsNull(this.tableEQPITEMMST_H.ITEMNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetITEMNAMENull() {
                this[this.tableEQPITEMMST_H.ITEMNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSUBITEM1Null() {
                return this.IsNull(this.tableEQPITEMMST_H.SUBITEM1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSUBITEM1Null() {
                this[this.tableEQPITEMMST_H.SUBITEM1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSUBITEM2Null() {
                return this.IsNull(this.tableEQPITEMMST_H.SUBITEM2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSUBITEM2Null() {
                this[this.tableEQPITEMMST_H.SUBITEM2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSUBITEM3Null() {
                return this.IsNull(this.tableEQPITEMMST_H.SUBITEM3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSUBITEM3Null() {
                this[this.tableEQPITEMMST_H.SUBITEM3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPITEMSUBMST_HRow[] GetEQPITEMSUBMST_HRows() {
                if ((this.Table.ChildRelations["EQPITEMMST_EQPITEMSUBMST"] == null)) {
                    return new EQPITEMSUBMST_HRow[0];
                }
                else {
                    return ((EQPITEMSUBMST_HRow[])(base.GetChildRows(this.Table.ChildRelations["EQPITEMMST_EQPITEMSUBMST"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class EQPITEMSUBMST_HRow : global::System.Data.DataRow {
            
            private EQPITEMSUBMST_HDataTable tableEQPITEMSUBMST_H;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal EQPITEMSUBMST_HRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEQPITEMSUBMST_H = ((EQPITEMSUBMST_HDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EQPTYPE {
                get {
                    return ((string)(this[this.tableEQPITEMSUBMST_H.EQPTYPEColumn]));
                }
                set {
                    this[this.tableEQPITEMSUBMST_H.EQPTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ITEMCODE {
                get {
                    return ((string)(this[this.tableEQPITEMSUBMST_H.ITEMCODEColumn]));
                }
                set {
                    this[this.tableEQPITEMSUBMST_H.ITEMCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SEQNUM {
                get {
                    return ((string)(this[this.tableEQPITEMSUBMST_H.SEQNUMColumn]));
                }
                set {
                    this[this.tableEQPITEMSUBMST_H.SEQNUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SUBITEMNAME {
                get {
                    try {
                        return ((string)(this[this.tableEQPITEMSUBMST_H.SUBITEMNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'EQPITEMSUBMST_H\' にある列 \'SUBITEMNAME\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableEQPITEMSUBMST_H.SUBITEMNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SUBITEMIMG {
                get {
                    try {
                        return ((string)(this[this.tableEQPITEMSUBMST_H.SUBITEMIMGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'EQPITEMSUBMST_H\' にある列 \'SUBITEMIMG\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableEQPITEMSUBMST_H.SUBITEMIMGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string INSPECTIONPOINT {
                get {
                    try {
                        return ((string)(this[this.tableEQPITEMSUBMST_H.INSPECTIONPOINTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'EQPITEMSUBMST_H\' にある列 \'INSPECTIONPOINT\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableEQPITEMSUBMST_H.INSPECTIONPOINTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string JUDGMENTCRITERIA {
                get {
                    try {
                        return ((string)(this[this.tableEQPITEMSUBMST_H.JUDGMENTCRITERIAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'EQPITEMSUBMST_H\' にある列 \'JUDGMENTCRITERIA\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableEQPITEMSUBMST_H.JUDGMENTCRITERIAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string COMMENTS {
                get {
                    try {
                        return ((string)(this[this.tableEQPITEMSUBMST_H.COMMENTSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'EQPITEMSUBMST_H\' にある列 \'COMMENTS\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableEQPITEMSUBMST_H.COMMENTSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BEFTYTLE {
                get {
                    try {
                        return ((string)(this[this.tableEQPITEMSUBMST_H.BEFTYTLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'EQPITEMSUBMST_H\' にある列 \'BEFTYTLE\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableEQPITEMSUBMST_H.BEFTYTLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string AFTTYTLE {
                get {
                    try {
                        return ((string)(this[this.tableEQPITEMSUBMST_H.AFTTYTLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'EQPITEMSUBMST_H\' にある列 \'AFTTYTLE\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableEQPITEMSUBMST_H.AFTTYTLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string AUTOJUDGEFLG {
                get {
                    try {
                        return ((string)(this[this.tableEQPITEMSUBMST_H.AUTOJUDGEFLGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'EQPITEMSUBMST_H\' にある列 \'AUTOJUDGEFLG\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableEQPITEMSUBMST_H.AUTOJUDGEFLGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string REVISIONNUM {
                get {
                    return ((string)(this[this.tableEQPITEMSUBMST_H.REVISIONNUMColumn]));
                }
                set {
                    this[this.tableEQPITEMSUBMST_H.REVISIONNUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPITEMMST_HRow EQPITEMMSTRowParent {
                get {
                    return ((EQPITEMMST_HRow)(this.GetParentRow(this.Table.ParentRelations["EQPITEMMST_EQPITEMSUBMST"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["EQPITEMMST_EQPITEMSUBMST"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSUBITEMNAMENull() {
                return this.IsNull(this.tableEQPITEMSUBMST_H.SUBITEMNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSUBITEMNAMENull() {
                this[this.tableEQPITEMSUBMST_H.SUBITEMNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSUBITEMIMGNull() {
                return this.IsNull(this.tableEQPITEMSUBMST_H.SUBITEMIMGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSUBITEMIMGNull() {
                this[this.tableEQPITEMSUBMST_H.SUBITEMIMGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsINSPECTIONPOINTNull() {
                return this.IsNull(this.tableEQPITEMSUBMST_H.INSPECTIONPOINTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetINSPECTIONPOINTNull() {
                this[this.tableEQPITEMSUBMST_H.INSPECTIONPOINTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsJUDGMENTCRITERIANull() {
                return this.IsNull(this.tableEQPITEMSUBMST_H.JUDGMENTCRITERIAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetJUDGMENTCRITERIANull() {
                this[this.tableEQPITEMSUBMST_H.JUDGMENTCRITERIAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCOMMENTSNull() {
                return this.IsNull(this.tableEQPITEMSUBMST_H.COMMENTSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCOMMENTSNull() {
                this[this.tableEQPITEMSUBMST_H.COMMENTSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBEFTYTLENull() {
                return this.IsNull(this.tableEQPITEMSUBMST_H.BEFTYTLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBEFTYTLENull() {
                this[this.tableEQPITEMSUBMST_H.BEFTYTLEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAFTTYTLENull() {
                return this.IsNull(this.tableEQPITEMSUBMST_H.AFTTYTLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAFTTYTLENull() {
                this[this.tableEQPITEMSUBMST_H.AFTTYTLEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAUTOJUDGEFLGNull() {
                return this.IsNull(this.tableEQPITEMSUBMST_H.AUTOJUDGEFLGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAUTOJUDGEFLGNull() {
                this[this.tableEQPITEMSUBMST_H.AUTOJUDGEFLGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPITEMSUBEXPMST_HRow[] GetEQPITEMSUBEXPMST_HRows() {
                if ((this.Table.ChildRelations["EQPITEMSUBMST_EQPITEMSUBEXPMST"] == null)) {
                    return new EQPITEMSUBEXPMST_HRow[0];
                }
                else {
                    return ((EQPITEMSUBEXPMST_HRow[])(base.GetChildRows(this.Table.ChildRelations["EQPITEMSUBMST_EQPITEMSUBEXPMST"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPINSPITEMRow[] GetEQPINSPITEMRows() {
                if ((this.Table.ChildRelations["EQPITEMSUBMST_EQPINSPITEM"] == null)) {
                    return new EQPINSPITEMRow[0];
                }
                else {
                    return ((EQPINSPITEMRow[])(base.GetChildRows(this.Table.ChildRelations["EQPITEMSUBMST_EQPINSPITEM"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class EQPINSPITEMRow : global::System.Data.DataRow {
            
            private EQPINSPITEMDataTable tableEQPINSPITEM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal EQPINSPITEMRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEQPINSPITEM = ((EQPINSPITEMDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EQPID {
                get {
                    return ((string)(this[this.tableEQPINSPITEM.EQPIDColumn]));
                }
                set {
                    this[this.tableEQPINSPITEM.EQPIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string INTERVAL {
                get {
                    return ((string)(this[this.tableEQPINSPITEM.INTERVALColumn]));
                }
                set {
                    this[this.tableEQPINSPITEM.INTERVALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string STREPORTDATE {
                get {
                    return ((string)(this[this.tableEQPINSPITEM.STREPORTDATEColumn]));
                }
                set {
                    this[this.tableEQPINSPITEM.STREPORTDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ENREPORTDATE {
                get {
                    try {
                        return ((string)(this[this.tableEQPINSPITEM.ENREPORTDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'EQPINSPITEM\' にある列 \'ENREPORTDATE\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableEQPINSPITEM.ENREPORTDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ITEMCODE {
                get {
                    return ((string)(this[this.tableEQPINSPITEM.ITEMCODEColumn]));
                }
                set {
                    this[this.tableEQPINSPITEM.ITEMCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SEQNUM {
                get {
                    return ((string)(this[this.tableEQPINSPITEM.SEQNUMColumn]));
                }
                set {
                    this[this.tableEQPINSPITEM.SEQNUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BEFRESULT {
                get {
                    try {
                        return ((string)(this[this.tableEQPINSPITEM.BEFRESULTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'EQPINSPITEM\' にある列 \'BEFRESULT\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableEQPINSPITEM.BEFRESULTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string AFTRESULT {
                get {
                    try {
                        return ((string)(this[this.tableEQPINSPITEM.AFTRESULTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'EQPINSPITEM\' にある列 \'AFTRESULT\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableEQPINSPITEM.AFTRESULTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPITEMSUBMST_HRow EQPITEMSUBMSTRowParent {
                get {
                    return ((EQPITEMSUBMST_HRow)(this.GetParentRow(this.Table.ParentRelations["EQPITEMSUBMST_EQPINSPITEM"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["EQPITEMSUBMST_EQPINSPITEM"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsENREPORTDATENull() {
                return this.IsNull(this.tableEQPINSPITEM.ENREPORTDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetENREPORTDATENull() {
                this[this.tableEQPINSPITEM.ENREPORTDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBEFRESULTNull() {
                return this.IsNull(this.tableEQPINSPITEM.BEFRESULTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBEFRESULTNull() {
                this[this.tableEQPINSPITEM.BEFRESULTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAFTRESULTNull() {
                return this.IsNull(this.tableEQPINSPITEM.AFTRESULTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAFTRESULTNull() {
                this[this.tableEQPINSPITEM.AFTRESULTColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class EQPITEMSUBEXPMST_HRow : global::System.Data.DataRow {
            
            private EQPITEMSUBEXPMST_HDataTable tableEQPITEMSUBEXPMST_H;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal EQPITEMSUBEXPMST_HRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEQPITEMSUBEXPMST_H = ((EQPITEMSUBEXPMST_HDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EQPTYPE {
                get {
                    return ((string)(this[this.tableEQPITEMSUBEXPMST_H.EQPTYPEColumn]));
                }
                set {
                    this[this.tableEQPITEMSUBEXPMST_H.EQPTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ITEMCODE {
                get {
                    return ((string)(this[this.tableEQPITEMSUBEXPMST_H.ITEMCODEColumn]));
                }
                set {
                    this[this.tableEQPITEMSUBEXPMST_H.ITEMCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SEQNUM {
                get {
                    return ((string)(this[this.tableEQPITEMSUBEXPMST_H.SEQNUMColumn]));
                }
                set {
                    this[this.tableEQPITEMSUBEXPMST_H.SEQNUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EXPSEQNUM {
                get {
                    return ((string)(this[this.tableEQPITEMSUBEXPMST_H.EXPSEQNUMColumn]));
                }
                set {
                    this[this.tableEQPITEMSUBEXPMST_H.EXPSEQNUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ITEMLABEL {
                get {
                    try {
                        return ((string)(this[this.tableEQPITEMSUBEXPMST_H.ITEMLABELColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'EQPITEMSUBEXPMST_H\' にある列 \'ITEMLABEL\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableEQPITEMSUBEXPMST_H.ITEMLABELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string JUDGVALU1 {
                get {
                    try {
                        return ((string)(this[this.tableEQPITEMSUBEXPMST_H.JUDGVALU1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'EQPITEMSUBEXPMST_H\' にある列 \'JUDGVALU1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableEQPITEMSUBEXPMST_H.JUDGVALU1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string JUDGVALU2 {
                get {
                    try {
                        return ((string)(this[this.tableEQPITEMSUBEXPMST_H.JUDGVALU2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'EQPITEMSUBEXPMST_H\' にある列 \'JUDGVALU2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableEQPITEMSUBEXPMST_H.JUDGVALU2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RANGECTG {
                get {
                    try {
                        return ((string)(this[this.tableEQPITEMSUBEXPMST_H.RANGECTGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'EQPITEMSUBEXPMST_H\' にある列 \'RANGECTG\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableEQPITEMSUBEXPMST_H.RANGECTGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string REVISIONNUM {
                get {
                    return ((string)(this[this.tableEQPITEMSUBEXPMST_H.REVISIONNUMColumn]));
                }
                set {
                    this[this.tableEQPITEMSUBEXPMST_H.REVISIONNUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPITEMSUBMST_HRow EQPITEMSUBMSTRowParent {
                get {
                    return ((EQPITEMSUBMST_HRow)(this.GetParentRow(this.Table.ParentRelations["EQPITEMSUBMST_EQPITEMSUBEXPMST"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["EQPITEMSUBMST_EQPITEMSUBEXPMST"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsITEMLABELNull() {
                return this.IsNull(this.tableEQPITEMSUBEXPMST_H.ITEMLABELColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetITEMLABELNull() {
                this[this.tableEQPITEMSUBEXPMST_H.ITEMLABELColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsJUDGVALU1Null() {
                return this.IsNull(this.tableEQPITEMSUBEXPMST_H.JUDGVALU1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetJUDGVALU1Null() {
                this[this.tableEQPITEMSUBEXPMST_H.JUDGVALU1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsJUDGVALU2Null() {
                return this.IsNull(this.tableEQPITEMSUBEXPMST_H.JUDGVALU2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetJUDGVALU2Null() {
                this[this.tableEQPITEMSUBEXPMST_H.JUDGVALU2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRANGECTGNull() {
                return this.IsNull(this.tableEQPITEMSUBEXPMST_H.RANGECTGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRANGECTGNull() {
                this[this.tableEQPITEMSUBEXPMST_H.RANGECTGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPINSPITEMEXPRow[] GetEQPINSPITEMEXPRows() {
                if ((this.Table.ChildRelations["EQPITEMSUBEXPMST_EQPINSPITEMEXP"] == null)) {
                    return new EQPINSPITEMEXPRow[0];
                }
                else {
                    return ((EQPINSPITEMEXPRow[])(base.GetChildRows(this.Table.ChildRelations["EQPITEMSUBEXPMST_EQPINSPITEMEXP"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class EQPINSPITEMEXPRow : global::System.Data.DataRow {
            
            private EQPINSPITEMEXPDataTable tableEQPINSPITEMEXP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal EQPINSPITEMEXPRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEQPINSPITEMEXP = ((EQPINSPITEMEXPDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EQPID {
                get {
                    return ((string)(this[this.tableEQPINSPITEMEXP.EQPIDColumn]));
                }
                set {
                    this[this.tableEQPINSPITEMEXP.EQPIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string INTERVAL {
                get {
                    return ((string)(this[this.tableEQPINSPITEMEXP.INTERVALColumn]));
                }
                set {
                    this[this.tableEQPINSPITEMEXP.INTERVALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string STREPORTDATE {
                get {
                    return ((string)(this[this.tableEQPINSPITEMEXP.STREPORTDATEColumn]));
                }
                set {
                    this[this.tableEQPINSPITEMEXP.STREPORTDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ENREPORTDATE {
                get {
                    try {
                        return ((string)(this[this.tableEQPINSPITEMEXP.ENREPORTDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'EQPINSPITEMEXP\' にある列 \'ENREPORTDATE\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableEQPINSPITEMEXP.ENREPORTDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ITEMCODE {
                get {
                    return ((string)(this[this.tableEQPINSPITEMEXP.ITEMCODEColumn]));
                }
                set {
                    this[this.tableEQPINSPITEMEXP.ITEMCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SEQNUM {
                get {
                    return ((string)(this[this.tableEQPINSPITEMEXP.SEQNUMColumn]));
                }
                set {
                    this[this.tableEQPINSPITEMEXP.SEQNUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EXPSEQNUM {
                get {
                    return ((string)(this[this.tableEQPINSPITEMEXP.EXPSEQNUMColumn]));
                }
                set {
                    this[this.tableEQPINSPITEMEXP.EXPSEQNUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BEFVALUE {
                get {
                    try {
                        return ((string)(this[this.tableEQPINSPITEMEXP.BEFVALUEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'EQPINSPITEMEXP\' にある列 \'BEFVALUE\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableEQPINSPITEMEXP.BEFVALUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string AFTVALUE {
                get {
                    try {
                        return ((string)(this[this.tableEQPINSPITEMEXP.AFTVALUEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'EQPINSPITEMEXP\' にある列 \'AFTVALUE\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableEQPINSPITEMEXP.AFTVALUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPITEMSUBEXPMST_HRow EQPITEMSUBEXPMSTRowParent {
                get {
                    return ((EQPITEMSUBEXPMST_HRow)(this.GetParentRow(this.Table.ParentRelations["EQPITEMSUBEXPMST_EQPINSPITEMEXP"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["EQPITEMSUBEXPMST_EQPINSPITEMEXP"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsENREPORTDATENull() {
                return this.IsNull(this.tableEQPINSPITEMEXP.ENREPORTDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetENREPORTDATENull() {
                this[this.tableEQPINSPITEMEXP.ENREPORTDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBEFVALUENull() {
                return this.IsNull(this.tableEQPINSPITEMEXP.BEFVALUEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBEFVALUENull() {
                this[this.tableEQPINSPITEMEXP.BEFVALUEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAFTVALUENull() {
                return this.IsNull(this.tableEQPINSPITEMEXP.AFTVALUEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAFTVALUENull() {
                this[this.tableEQPINSPITEMEXP.AFTVALUEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class EQPMAINMST_HRow : global::System.Data.DataRow {
            
            private EQPMAINMST_HDataTable tableEQPMAINMST_H;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal EQPMAINMST_HRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEQPMAINMST_H = ((EQPMAINMST_HDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EQPTYPE {
                get {
                    return ((string)(this[this.tableEQPMAINMST_H.EQPTYPEColumn]));
                }
                set {
                    this[this.tableEQPMAINMST_H.EQPTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LINEFLG {
                get {
                    try {
                        return ((string)(this[this.tableEQPMAINMST_H.LINEFLGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'EQPMAINMST_H\' にある列 \'LINEFLG\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableEQPMAINMST_H.LINEFLGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string INSPECTIONNAME {
                get {
                    try {
                        return ((string)(this[this.tableEQPMAINMST_H.INSPECTIONNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'EQPMAINMST_H\' にある列 \'INSPECTIONNAME\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableEQPMAINMST_H.INSPECTIONNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string REVISIONNUM {
                get {
                    return ((string)(this[this.tableEQPMAINMST_H.REVISIONNUMColumn]));
                }
                set {
                    this[this.tableEQPMAINMST_H.REVISIONNUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLINEFLGNull() {
                return this.IsNull(this.tableEQPMAINMST_H.LINEFLGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLINEFLGNull() {
                this[this.tableEQPMAINMST_H.LINEFLGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsINSPECTIONNAMENull() {
                return this.IsNull(this.tableEQPMAINMST_H.INSPECTIONNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetINSPECTIONNAMENull() {
                this[this.tableEQPMAINMST_H.INSPECTIONNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPINSPRow[] GetEQPINSPRows() {
                if ((this.Table.ChildRelations["EQPMAINMST_EQPINSP"] == null)) {
                    return new EQPINSPRow[0];
                }
                else {
                    return ((EQPINSPRow[])(base.GetChildRows(this.Table.ChildRelations["EQPMAINMST_EQPINSP"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class EQPINSP_LISTRow : global::System.Data.DataRow {
            
            private EQPINSP_LISTDataTable tableEQPINSP_LIST;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal EQPINSP_LISTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEQPINSP_LIST = ((EQPINSP_LISTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string INSPECTIONNAME {
                get {
                    try {
                        return ((string)(this[this.tableEQPINSP_LIST.INSPECTIONNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'EQPINSP_LIST\' にある列 \'INSPECTIONNAME\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableEQPINSP_LIST.INSPECTIONNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EQPID {
                get {
                    return ((string)(this[this.tableEQPINSP_LIST.EQPIDColumn]));
                }
                set {
                    this[this.tableEQPINSP_LIST.EQPIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RESULT {
                get {
                    try {
                        return ((string)(this[this.tableEQPINSP_LIST.RESULTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'EQPINSP_LIST\' にある列 \'RESULT\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableEQPINSP_LIST.RESULTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string INTERVAL {
                get {
                    return ((string)(this[this.tableEQPINSP_LIST.INTERVALColumn]));
                }
                set {
                    this[this.tableEQPINSP_LIST.INTERVALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string STREPORTDATE {
                get {
                    return ((string)(this[this.tableEQPINSP_LIST.STREPORTDATEColumn]));
                }
                set {
                    this[this.tableEQPINSP_LIST.STREPORTDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ENREPORTDATE {
                get {
                    try {
                        return ((string)(this[this.tableEQPINSP_LIST.ENREPORTDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'EQPINSP_LIST\' にある列 \'ENREPORTDATE\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableEQPINSP_LIST.ENREPORTDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FLOOR {
                get {
                    try {
                        return ((string)(this[this.tableEQPINSP_LIST.FLOORColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'EQPINSP_LIST\' にある列 \'FLOOR\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableEQPINSP_LIST.FLOORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string IMPLOPERATORNAME {
                get {
                    try {
                        return ((string)(this[this.tableEQPINSP_LIST.IMPLOPERATORNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'EQPINSP_LIST\' にある列 \'IMPLOPERATORNAME\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableEQPINSP_LIST.IMPLOPERATORNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RESPOPERATORNAME {
                get {
                    try {
                        return ((string)(this[this.tableEQPINSP_LIST.RESPOPERATORNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'EQPINSP_LIST\' にある列 \'RESPOPERATORNAME\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableEQPINSP_LIST.RESPOPERATORNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SERIALNUM {
                get {
                    try {
                        return ((string)(this[this.tableEQPINSP_LIST.SERIALNUMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'EQPINSP_LIST\' にある列 \'SERIALNUM\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableEQPINSP_LIST.SERIALNUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ASSETNUM {
                get {
                    try {
                        return ((string)(this[this.tableEQPINSP_LIST.ASSETNUMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'EQPINSP_LIST\' にある列 \'ASSETNUM\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableEQPINSP_LIST.ASSETNUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EQPTYPE {
                get {
                    return ((string)(this[this.tableEQPINSP_LIST.EQPTYPEColumn]));
                }
                set {
                    this[this.tableEQPINSP_LIST.EQPTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string REVISIONNUM {
                get {
                    try {
                        return ((string)(this[this.tableEQPINSP_LIST.REVISIONNUMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'EQPINSP_LIST\' にある列 \'REVISIONNUM\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableEQPINSP_LIST.REVISIONNUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsINSPECTIONNAMENull() {
                return this.IsNull(this.tableEQPINSP_LIST.INSPECTIONNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetINSPECTIONNAMENull() {
                this[this.tableEQPINSP_LIST.INSPECTIONNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRESULTNull() {
                return this.IsNull(this.tableEQPINSP_LIST.RESULTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRESULTNull() {
                this[this.tableEQPINSP_LIST.RESULTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsENREPORTDATENull() {
                return this.IsNull(this.tableEQPINSP_LIST.ENREPORTDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetENREPORTDATENull() {
                this[this.tableEQPINSP_LIST.ENREPORTDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFLOORNull() {
                return this.IsNull(this.tableEQPINSP_LIST.FLOORColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFLOORNull() {
                this[this.tableEQPINSP_LIST.FLOORColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsIMPLOPERATORNAMENull() {
                return this.IsNull(this.tableEQPINSP_LIST.IMPLOPERATORNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetIMPLOPERATORNAMENull() {
                this[this.tableEQPINSP_LIST.IMPLOPERATORNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRESPOPERATORNAMENull() {
                return this.IsNull(this.tableEQPINSP_LIST.RESPOPERATORNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRESPOPERATORNAMENull() {
                this[this.tableEQPINSP_LIST.RESPOPERATORNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSERIALNUMNull() {
                return this.IsNull(this.tableEQPINSP_LIST.SERIALNUMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSERIALNUMNull() {
                this[this.tableEQPINSP_LIST.SERIALNUMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsASSETNUMNull() {
                return this.IsNull(this.tableEQPINSP_LIST.ASSETNUMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetASSETNUMNull() {
                this[this.tableEQPINSP_LIST.ASSETNUMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsREVISIONNUMNull() {
                return this.IsNull(this.tableEQPINSP_LIST.REVISIONNUMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetREVISIONNUMNull() {
                this[this.tableEQPINSP_LIST.REVISIONNUMColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class EQPINSPRowChangeEvent : global::System.EventArgs {
            
            private EQPINSPRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPINSPRowChangeEvent(EQPINSPRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPINSPRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class EQPINSPMETERHISTRowChangeEvent : global::System.EventArgs {
            
            private EQPINSPMETERHISTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPINSPMETERHISTRowChangeEvent(EQPINSPMETERHISTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPINSPMETERHISTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class EQPINSPMETERRowChangeEvent : global::System.EventArgs {
            
            private EQPINSPMETERRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPINSPMETERRowChangeEvent(EQPINSPMETERRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPINSPMETERRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class EQPITEMMST_HRowChangeEvent : global::System.EventArgs {
            
            private EQPITEMMST_HRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPITEMMST_HRowChangeEvent(EQPITEMMST_HRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPITEMMST_HRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class EQPITEMSUBMST_HRowChangeEvent : global::System.EventArgs {
            
            private EQPITEMSUBMST_HRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPITEMSUBMST_HRowChangeEvent(EQPITEMSUBMST_HRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPITEMSUBMST_HRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class EQPINSPITEMRowChangeEvent : global::System.EventArgs {
            
            private EQPINSPITEMRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPINSPITEMRowChangeEvent(EQPINSPITEMRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPINSPITEMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class EQPITEMSUBEXPMST_HRowChangeEvent : global::System.EventArgs {
            
            private EQPITEMSUBEXPMST_HRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPITEMSUBEXPMST_HRowChangeEvent(EQPITEMSUBEXPMST_HRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPITEMSUBEXPMST_HRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class EQPINSPITEMEXPRowChangeEvent : global::System.EventArgs {
            
            private EQPINSPITEMEXPRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPINSPITEMEXPRowChangeEvent(EQPINSPITEMEXPRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPINSPITEMEXPRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class EQPMAINMST_HRowChangeEvent : global::System.EventArgs {
            
            private EQPMAINMST_HRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPMAINMST_HRowChangeEvent(EQPMAINMST_HRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPMAINMST_HRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class EQPINSP_LISTRowChangeEvent : global::System.EventArgs {
            
            private EQPINSP_LISTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPINSP_LISTRowChangeEvent(EQPINSP_LISTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EQPINSP_LISTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591